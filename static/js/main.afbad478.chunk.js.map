{"version":3,"sources":["common/StartImage.js","common/Contact.js","pages/experience/gatech.png","pages/experience/suu.png","pages/experience/amazon.png","pages/experience/cgm.png","pages/home/ExperienceSummary.js","pages/home/profile.jpg","pages/home/Home.js","pages/experience/Switch.js","pages/experience/GatechExp.js","pages/experience/SuuExp.js","pages/experience/AmazonExp.js","pages/experience/CgmExp.js","pages/experience/coding.png","pages/experience/Experience.js","pages/projects/FlightDemo.gif","pages/projects/SoccerTwosFPV.gif","pages/projects/DemoCarousel.js","pages/projects/Projects.js","pages/about/About.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","tallFill","height","StartImage","props","classes","clickHandler","onClick","bgImage","strength","window","innerHeight","Math","max","style","Grid","container","className","direction","item","xs","left","center","alignItems","justify","Fab","margin","Contact","React","useState","open","setOpen","phone","email","List","dense","ListItemLink","href","ListItemIcon","color","ListItemText","primary","ListItem","button","navigator","clipboard","writeText","Snackbar","onClose","autoHideDuration","Alert","severity","component","target","logos","maxWidth","maxHeight","row","padding","EducationExperience","ExperienceSummary","experience","gatech","suu","WorkExperience","amazon","cgm","src","image","alt","ExperienceText","children","Typography","variant","title","whiteSpace","subtitle","details","Link","link","Experience","this","gatechImage","suuImage","amazonImage","cgmImage","root","textAlign","divider","longText","Home","startRef","useRef","current","scrollIntoView","portrait","ref","Divider","elevatorPitch","invite","locations","ExperienceSwitcher","history","useHistory","id","useParams","index","indexOf","value","setValue","query","URLSearchParams","useLocation","search","get","handleChange","event","newValue","replace","cleanUrl","onChange","setTimeout","fontSize","AppBar","position","Tabs","centered","indicatorColor","textColor","backgroundColor","Tab","label","DynamicDisplay","display","Children","toArray","find","c","theme","lists","typography","body1","innerList","textIndent","GatechExperience","degree","summary","GatechSummary","GatechDetails","role","date","Section","rel","SuuSummary","SuuDetails","SuuExperience","AmazonExperience","AmazonSummary","AmazonDetails","CgmExperience","CgmSummary","CgmDetails","logo","body","text","marginBottom","ExperiencePage","scrollTo","offsetTop","codingImage","content","marginTop","width","DemoCarousel","Carousel","Item","lunarLander","soccerTwosFPV","Projects","ProjectList","About","App","NavBar","path","pathname","split","console","log","top","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","type","light","main","dark","contrastText","secondary","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.afbad478.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Fab, makeStyles } from \"@material-ui/core\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  tallFill: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\n\r\nexport default function StartImage(props) {\r\n  const classes = useStyles();\r\n  var clickHandler = props.onClick;\r\n  var bgImage = props.bgImage\r\n  var strength = props.strength || 500;\r\n  var height = props.height || window.innerHeight - 100;\r\n  height = Math.max(height, 100);\r\n\r\n  return (\r\n    <Parallax bgImage={bgImage} strength={strength}>\r\n      <div style={{ 'height': height }}>\r\n        <Grid\r\n          container\r\n          className={classes.tallFill}\r\n          direction='row'\r\n        >\r\n          <Grid item xs={3}>\r\n            {props.left}\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            {props.center}\r\n          </Grid>\r\n          \r\n          <Grid container alignItems='flex-end'  justify='flex-end'>\r\n            <Fab  onClick={clickHandler}  style={{ margin: 30 }}>\r\n              <KeyboardArrowDown></KeyboardArrowDown>\r\n            </Fab>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    </Parallax>);\r\n  }","import React from \"react\";\r\nimport { Grid, Snackbar } from \"@material-ui/core\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nexport default function Contact() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const phone = \"(435) 668-2254\";\r\n  const email = \"loganbjones16@gmail.com\";\r\n\r\n  const phoneHandler = () => {\r\n    navigator.clipboard.writeText(phone);\r\n    setOpen(true);\r\n  }\r\n  const emailHandler = () => {\r\n    navigator.clipboard.writeText(email);\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Grid  container  justify=\"center\">\r\n        <Grid item>\r\n          <List dense>\r\n            <ListItemLink href=\"https://www.google.com/maps/place/Medford,+OR/\">\r\n              <ListItemIcon>\r\n                <HomeIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Medford, OR\" />\r\n            </ListItemLink>\r\n            <ListItem button onClick={phoneHandler}>\r\n              <ListItemIcon>\r\n                <PhoneIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={phone} />\r\n            </ListItem>\r\n            <ListItem button onClick={emailHandler}>\r\n              <ListItemIcon>\r\n                <EmailIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={email} />\r\n            </ListItem>\r\n            <ListItemLink href=\"https://linkedin.com/in/loganbjones16\">\r\n              <ListItemIcon>\r\n                <LinkedInIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"linkedin.com/in/loganbjones16\" />\r\n            </ListItemLink>\r\n            <ListItemLink href=\"https://github.com/logar16\">\r\n              <ListItemIcon>\r\n                <GitHubIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"github.com/logar16\" />\r\n            </ListItemLink>\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={open} onClose={() => setOpen(false)} autoHideDuration={3000} >\r\n        <Alert  severity=\"success\">\r\n          Copied to clipboard!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" target=\"_blank\" {...props} />;\r\n}","export default __webpack_public_path__ + \"static/media/gatech.c478aa7c.png\";","export default __webpack_public_path__ + \"static/media/suu.1d4c635b.png\";","export default __webpack_public_path__ + \"static/media/amazon.524b5e5c.png\";","export default __webpack_public_path__ + \"static/media/cgm.04180620.png\";","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Link, Typography } from \"@material-ui/core\";\r\n\r\nimport gatechImage from '../experience/gatech.png'\r\nimport suuImage from '../experience/suu.png'\r\nimport amazonImage from '../experience/amazon.png'\r\nimport cgmImage from '../experience/cgm.png'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  logos: {\r\n    maxWidth: 400,\r\n    maxHeight: 200\r\n  },\r\n  row: {\r\n    padding: \"5% 10% 5%\",\r\n  }\r\n});\r\n\r\nexport function EducationExperience() {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"space-evenly\">\r\n      <ExperienceSummary   experience={gatech}/>\r\n      <ExperienceSummary   experience={suu}/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport function WorkExperience() {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"space-evenly\">\r\n      <ExperienceSummary  experience={amazon}/>\r\n      <ExperienceSummary  experience={cgm}/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nfunction ExperienceSummary({experience}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n        <Grid \r\n          container \r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.row}\r\n        >\r\n          <Grid item  xs={6}>\r\n            <img  className={classes.logos} src={experience.image} alt=\"\"/>\r\n          </Grid>\r\n          <Grid item  xs={6}>\r\n            <ExperienceText>{experience}</ExperienceText>\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n  \r\nfunction ExperienceText(props) {\r\n  let experience = props.children;\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item>\r\n        <Typography variant=\"h4\">\r\n          {experience.title}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\" style={{whiteSpace: \"pre-line\"}}>\r\n          {experience.subtitle}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          {experience.details}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Link href={experience.link}>More</Link>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nfunction Experience(title, subtitle, details, link, image) {\r\n  this.title = title;\r\n  this.subtitle = subtitle;\r\n  this.details = details;\r\n  this.link = `#/experience/${link}?switch=true`;\r\n  this.image = image;\r\n}\r\n\r\nconst gatech = new Experience(\r\n  \"Master of Science\",\r\n  \"Major: Computer Science\\nConcentration: Interactive Intelligence\",\r\n  \"Graduated Dec 2020 with GPA 3.80\",\r\n  \"gatech\",\r\n  gatechImage\r\n);\r\nconst suu = new Experience(\r\n  \"Bachelor of Science\",\r\n  \"Major: Biology\\nMinor: Chemistry\",\r\n  \"Graduated May 2016 with GPA 3.77\",\r\n  \"suu\",\r\n  suuImage\r\n);\r\n\r\nconst amazon = new Experience(\r\n  \"Amazon\",\r\n  \"Software Development Engineer I\",\r\n  \"Aug 2019 - Sep 2020\",\r\n  \"amazon\",\r\n  amazonImage\r\n);\r\n\r\nconst cgm = new Experience(\r\n  \"Casino Game Maker\",\r\n  \"Software Engineer\",\r\n  \"April 2016 - July 2019\",\r\n  \"cgm\",\r\n  cgmImage\r\n);","export default __webpack_public_path__ + \"static/media/profile.61a0a596.jpg\";","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\r\n\r\nimport StartImage from '../../common/StartImage'\r\nimport Contact from '../../common/Contact'\r\nimport {EducationExperience, WorkExperience} from './ExperienceSummary'\r\n\r\nimport portrait from './profile.jpg';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  divider: {\r\n    margin: 30,\r\n  },\r\n  longText: {\r\n    maxWidth: 800,\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const startRef = React.useRef();\r\n\r\n  const clickHandler = () => {\r\n    startRef.current.scrollIntoView();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <StartImage onClick={clickHandler} bgImage={portrait}/>\r\n      </div>\r\n      <div  ref={startRef}></div>\r\n      <div>\r\n        <Divider className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Typography className={classes.longText} variant=\"body1\">{elevatorPitch}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Typography variant=\"h3\">Education</Typography>\r\n        <EducationExperience/>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Typography variant=\"h3\">Work Experience</Typography>\r\n        <WorkExperience/>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Typography className={classes.longText} variant=\"body1\">{invite}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Contact></Contact>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst elevatorPitch = `Hello! My name is Logan Jones. I'm a self-taught programmer with a Master’s degree in \r\nArtificial Intelligence and Machine Learning and over four years of \r\nwork experience as a Software Engineer. \r\nI'm trying to break into a new role as a ML researcher and engineer.  I love\r\nReinforcement Learning and making AI agents that can make decisions on their own.`\r\n\r\nconst invite = `Check out the other sections of the site to learn more about my education, experience,\r\nongoing projects, and general information about me and how I got here.\r\nYou can also find ways to contact me below. I'm always happy to connect! \r\nNote that I am looking for remote positions at this time if possible.`","import React, { useState } from \"react\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst locations = [\r\n  'gatech',\r\n  'suu',\r\n  'amazon',\r\n  'cgm',\r\n]\r\n\r\n\r\nexport default function ExperienceSwitcher(props) {\r\n  const history = useHistory();\r\n  let {id} = useParams();\r\n  var index = locations.indexOf(id)\r\n  index = Math.max(0, index)\r\n  const [value, setValue] = useState(index)\r\n  \r\n  let query = new URLSearchParams(useLocation().search);\r\n  query = query.get('switch');\r\n  // console.log(`id: ${id}, index: ${index}, value: ${value}, query: ${query}`)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // console.log('new value:', newValue);\r\n    cleanUrl(locations[newValue]);\r\n    setValue(newValue);\r\n    props.onChange();\r\n  }\r\n\r\n  if (query) {\r\n    setTimeout(() => { handleChange(null, index) }, 100);\r\n  }\r\n  // else if (index !== value) {\r\n  //   setValue(index);\r\n  //   props.onChange();\r\n  // }\r\n\r\n  const style = { fontSize: 20 };\r\n\r\n  return (\r\n      <div>\r\n        <AppBar id=\"switcher\" position=\"static\" color=\"transparent\">\r\n          <Tabs \r\n            centered\r\n            value={value} \r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            style={{backgroundColor: 'primary'}}\r\n          >\r\n            <Tab  label='Georgia Tech' style={style} />\r\n            <Tab  label='SUU'     style={style} />\r\n            <Tab  label='Amazon'  style={style} />\r\n            <Tab  label='CGM'     style={style} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <DynamicDisplay value={locations[value]}>{props.children}</DynamicDisplay>\r\n      </div>\r\n  );\r\n\r\n  function cleanUrl(id) {\r\n    if (!id) \r\n      return;\r\n\r\n    history.replace(`/experience/${id}`);  //Clean up the URL, but it dilutes the history\r\n  }\r\n}\r\n\r\nfunction DynamicDisplay(props) {\r\n  var value = props.value;\r\n  var children = React.Children.toArray(props.children);\r\n  var display = children.find(c => c.props.id === value);\r\n  // console.log(value, display);\r\n  return (\r\n    <div>\r\n      {display}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport gatechImage from './gatech.png'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lists: {\r\n    ...theme.typography.body1,\r\n  },\r\n  innerList: {\r\n    textIndent: 5,\r\n  }\r\n}));\r\n\r\nexport default function GatechExperience() {\r\n  let degree = (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        Major: Computer Science\r\n      </Typography>\r\n      <Typography variant='h5'>\r\n        Emphasis: Interactive Intelligence\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n  \r\n  let summary = <GatechSummary/>;\r\n  let details = <GatechDetails/>;\r\n\r\n  return (\r\n  <Experience  \r\n    role=\"Master of Computer Science\"\r\n    date=\"Dec 2020\"\r\n    subtitle={degree}\r\n    summary={summary}\r\n    details={details}\r\n    image={gatechImage}\r\n    >\r\n  </Experience>);\r\n}\r\n\r\n\r\nfunction GatechSummary() {\r\n  let classes = useStyles();\r\n  return (\r\n    <Typography component='div'>\r\n      <ul className={classes.lists}>\r\n        <li>Degree specialization in Artificial Intelligence and Machine Learning</li>\r\n        <li>Completed challenging assignments by leveraging skills in Python and powerful libraries such as NumPy, SciPy, pandas, and the neural network libraries Keras and PyTorch</li>\r\n        <li>Built AI/ML agents that solved problems using modern AI/ML techniques such as as (bolded were built from scratch, others were using open-source implementations):\r\n          <ul>\r\n            <li><i>Reinforcement Learning</i>: <b>Value/Policy Iteration, Q-Learning, Deep Q-Networks</b>, multi-agent training in zero-sum environments</li>\r\n            <li><i>Supervised Learning</i>: <b>Deep Convolutional Neural Nets</b> (several visual tasks from classification to style transfer), <b>Decision Trees and Random Forests</b>, K-Nearest Neighbors, Support Vector Machines, as well as Bagging and Boosting\r\n              <ul>\r\n                <li><i>Machine Translation</i>: <b>RNNs, LSTMs, Seq2Seq, and Transformer Encoder</b></li>\r\n              </ul>\r\n            </li>\r\n            <li><i>Unsupervised Learning</i>: <b>Simulated Annealing</b>, Genetic Algorithms, MIMIC, PCA, ICA, and Expectation Maximization</li>\r\n            <li><i>Search</i>: <b>A* Search</b>, and <b>Minimax</b> (with Alpha-Beta Pruning)</li>\r\n          </ul>\r\n        </li>\r\n        <li>Collaborated with teams to build a prenatal healthcare application</li>\r\n        <li>Gained experience with Unity's ML-Agents during a team project that explored multi-agent Reinforcement Learning models with memory and attention</li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// <ul>\r\n//   <li>Deeply involved in every stage of the project—from design to implementation</li>\r\n//   <li>Quickly learned and built the UI using React and Javascript which were technologies previously unknown to me.  The UI contained multiple pages/views, data display dashboards, and interactions with a database, all done within less than 50 hours of work</li>\r\n//   <li>This app also included learning about FHIR and how to work with health data</li>\r\n// </ul>\r\n\r\n\r\n\r\nfunction GatechDetails() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Section>\r\n        This degree was an awesome opportunity to learn new things and stretch myself. \r\n        I worked full-time while working on this degree part-time, and it was not easy.\r\n        It changed my mind about several things related to technology and inspired me as to what I want out of a career.\r\n        Below are some specific skills I learned, organized by course.\r\n      </Section>\r\n      <Section  title='Deep Learning' id='DL'>\r\n        In this class, I learned about automatic differentiation, the nuances of gradient descent (e.g. vanishing gradients),\r\n        and modern applications of deep neural networks in supervised, unsupervised and reinforcement learning domains.\r\n        I hand-crafted my own forward and backward passes for linear and convolutional layers (and their loss functions).\r\n        Through this, I gained greater appreciation for the difficulties of deep learning as well as became aware of many more interesting applications of the technology.\r\n        This class exposed me to <b>PyTorch</b>, a neural network library that I now greatly enjoy.\r\n        Along with lectures from a quality professor, I received instruction from ML researchers at Facebook applying DL in the real world.\r\n        For <a  href=\"https://github.gatech.edu/ljones91/cs7643-project\" target=\"_blank\" rel='noreferrer'>the final project</a>, \r\n        I worked with a team to train and analyze multi-agent Reinforcement Learning models trained with limited observations and the addition of memory.\r\n        This was done using the Unity ML-Agents Soccer-Twos environment and the ML-Agents training code (with some modifications).\r\n      </Section>\r\n      <Section  title='Machine Learning'  id='ML'>\r\n        This course included a broad survey of Machine Learning techniques.  I covered traditional classification methods such as decision trees or k-means.\r\n        I also learned about many new and interesting methods such as neural networks, support vector machines, K-means clustering, and expectation maximization.\r\n        Assignments included gathering data, training multiple models, and evaluating and comparing their performance in multiple areas.\r\n        I used the <b>SciPy</b> and <b>NumPy</b> libraries extensively.\r\n      </Section>\r\n      <Section title='Reinforcement Learning' id='RL'>\r\n        Perhaps my favorite course at Georgia Tech, I learned about the Bellman Equation, Value and Policy Iteration, Q-Learning, Deep Q-Networks (DQN), and Game Theory (for multi-agent environments).\r\n        The most interesting project was replicating the DQN algorithm initially proposed by DeepMind to solve the OpenAI \"Lunar Lander\" environment.\r\n        At the time, I did the project with Keras, but later (after the Deep Learning class), I converted it to use <b>PyTorch</b> (see <a href='#/projects'>Projects</a>).\r\n        The project forced me to really dive into RL with neural networks as state approximators, which I have embraced wholeheartedly.\r\n        I also learned how to create an efficient setup for testing and evaluation so that exploration of models and hyperparameters can be done quickly and efficiently.\r\n      </Section>\r\n      <Section  title=\"Other Courses\" id=\"other\">\r\n        Some other courses of interest that I took were:\r\n        <ul className={classes.innerList}>\r\n          <li>Machine Learning for Trading\r\n            <ul>\r\n              <li>Familiarized with the powerful Python library <b>pandas</b> and its use with time series data</li>\r\n              <li>Used traditional supervised as well as RL algorithms for predicting buy/sell position movements using historical data and achieving consistently positive returns</li>\r\n              <li>Combined decision trees to create random forests for better accuracy</li>\r\n            </ul>\r\n          </li>\r\n          <li>Artificial Intelligence\r\n            <ul>\r\n              <li>Learned how to use NumPy and vectorization to efficiently work with large arrays of data</li>\r\n              <li>Built a minimax algorithm that could win in the game of Isolation more than half the time against the assignment's difficult test bot</li>\r\n              <li>Implemented a uni/bi/tri-directional A* algorithm to find shortest distance between two or three points of a graph</li>\r\n              <li>Introduced to concepts like Bayesian inference and bagging and boosting</li>\r\n            </ul>\r\n          </li>\r\n          <li>Knowledge-Based AI\r\n            <ul>\r\n              <li>Built an AI that could perform as well as a child on the Raven's Progressive Matrices intelligence test</li>\r\n              <li>Learned of the many ways to represent knowledge and understanding for intelligent agents, such as semantic networks, frames, and case-based/analogical/meta methods of reasoning</li>\r\n            </ul>\r\n          </li>\r\n          <li>Intro to Health Informatics\r\n            <ul>\r\n              <li>Built a pretty decent React Web app with no prior experience and in less than 50 hours\r\n                <ul>\r\n                  <li>App included multiple pages/views, data display dashboards, and interactions with a database</li>\r\n                </ul>\r\n              </li>\r\n              <li>Learned about FHIR and other healthcare related standards and formats</li>\r\n            </ul>\r\n          </li>\r\n          <li>Software Engineering and Software Architecture\r\n            <ul>\r\n              <li>These two classes improved how I design systems and communicate those designs to other engineers</li>\r\n              <li>Worked with a team as a driving force of the team to accomplish goals in a timely manner and effectively divide work</li>\r\n              <li>Improved in Java coding both for backend software and Android app development</li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport suuImage from './suu.png'\r\n\r\n\r\nfunction SuuSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>Majored in physical sciences, but also studied Psychology and Computer Science</li>\r\n        <li>Graduated magna cum laude with overall GPA of 3.77</li>\r\n        <li>Graduated from the university's Honors Program with a multidisciplinary thesis</li>\r\n        <li>Completed several Java based CS courses to gain foundational knowledge of\r\n          <ul>\r\n            <li>Object-Oriented Programming</li>\r\n            <li>Data Structures and Algorithms</li>\r\n          </ul>\r\n        </li>\r\n        <li>Excelled in difficult courses ranging from Organic Chemistry to Cell and Molecular Biology</li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction SuuDetails() {\r\n  return (\r\n    <Grid container>\r\n      <Section  title='Computer Science'>\r\n        Although this was not a direct part of my undergraduate degree, I took several CS classes at SUU.  \r\n        I did this to supplement my personal study of the subject via side-projects.\r\n        In these classes I learned about the basics of OOP and O-notation and I was introduced to a way of thinking about problems that is fundamental to solving them effectively with computer programming.\r\n      </Section>\r\n      <Section  title='Biology and Chemistry'>\r\n        I chose to study Biology because of my interest in learning about my own body and the functions of other incredible biological systems.\r\n        I was most interested in studying the brain and learning about how it worked, from a physiological level as well as a psychological level.\r\n        Starting with the basic laws of Chemistry and taking classes like Molecular Biology, I learned fundamentals.  \r\n        These combined and connected to help me understand the details that allowed for the bigger picture that the Biology classes taught.\r\n        I am glad I got my undergraduate degree in Biology and Chemistry, as it gives me a greater breadth of knowledge and appreciation for sciences and people than I think a singular study of Computer Science would.\r\n      </Section>\r\n      <Section  title='Psychology'>\r\n        I have a fascination with human psychology and learning how humans learn and think.\r\n        The most enlightening Psychology course I took while at SUU was definitely Reinforcement Learning.\r\n        The class expanded my understanding and gave me clear insights into behavior and gave me direction for my later studies in Machine Learning\r\n      </Section>\r\n      <Section  title='Honors Thesis'>\r\n        For my Honors Thesis, I combine my knowledge of Biology and Psychology along with my budding passion for Computer Science with my desire to write fiction.\r\n        The interdisciplinary project resulted in a Science Fiction novella that includes several real technologies (scaled up). \r\n        It was an adventure pulling together several of my passions while also completing a difficult final semester.  \r\n      </Section>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function SuuExperience() {\r\n  let degree = (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        Major: Biology\r\n      </Typography>\r\n      <Typography variant='h5'>\r\n        Minor: Chemistry\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Experience  \r\n      role=\"Bachelor of Science\"\r\n      date=\"May 2016\"\r\n      subtitle={degree}\r\n      details={<SuuDetails/>}\r\n      summary={<SuuSummary/>}\r\n      image={suuImage}\r\n    >\r\n    </Experience>);\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport amazonImage from './amazon.png'\r\n\r\n\r\nexport default function AmazonExperience() {\r\n  return (\r\n    <Experience  \r\n      role=\"Software Development Engineer I\"\r\n      date=\"Aug 2019 - Sept 2020\"\r\n      summary={<AmazonSummary/>}\r\n      details={<AmazonDetails/>}\r\n      image={amazonImage}\r\n    >\r\n    </Experience>);\r\n}\r\n\r\n\r\nfunction AmazonSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>\r\n          Took the lead as the primary designer and implementer of a major API addition to an integral service owning Amazon’s third-party fulfillment data\r\n        </li>\r\n        <li>\r\n        \tHands on experience with OOP principles and distributed computing for two, low-latency and high-transaction services\r\n        </li>\r\n        <li>\r\n          Demonstrated productivity by leading the team in approved designs and code commits for several months\r\n        </li>\r\n        <li>\r\n        \tGained familiarity with macOS and the UNIX terminal, including doing complicated queries over months of log data to retrieve data keys using the basic UNIX commands\r\n        </li>\r\n        <li>\r\n          Safely increased security for a major service by adding OAuth 2.0 based security without any loss of functionality or availability\r\n        </li>\r\n        <li>\r\n          Picked up new skills regarding API design and working with a NoSQL database\r\n        </li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AmazonDetails() {\r\n  return (\r\n    <Grid>\r\n      <Section>\r\n        At Amazon, I was part of a small team working in the backend of the eCommerce side of the business.\r\n        Our services tracked inventory availability and fulfillment capabilities for Third-party sellers, a significant portion of Amazon's income.\r\n        I worked with experienced engineers to safely make changes (some small, some significant) to the services without loss of availability or increased latencies.\r\n        After a year of working there, I came to realize that working in the backend maintaining an established service was not for me.  \r\n        I was going into my last semester of my <a href='#/experience/gatech?switch=true'>Master's in CS and Machine Learning</a>, and so I left Amazon to focus on finishing my degree and finding the right company for me.\r\n      </Section>\r\n      <Section  title='Increasing Service Responsibilities'>\r\n        One of our services was chosen to consolidate an older, Tier 1 (critical), service's responsibilities.  \r\n        I was tasked with designing how our service would handle the deprecated service's traffic among other migration concerns.\r\n        I designed a new API for our service as well as a method for moving traffic to our service while slowly phasing out the old one without any lost requests.\r\n        This opportunity improved my understanding of RESTful service design greatly.  \r\n        I also gained useful experience with a NoSQL datastore as well.\r\n        <p>\r\n          I implemented the new designs without assistance from team members as they did not know how the REST library/integration worked for that particular service, nor much about how the Guice dependency injection worked.  \r\n          Not only did I implement the new API (without issue in production), but I also wrote up some useful documentation for all who followed.  \r\n          This highlights something else about me, I love helping others succeed.  \r\n          Even though I knew I was going to leave the team soon, I cared about those who would follow me and so I made the documentation as helpful and thorough as possible.\r\n        </p>\r\n      </Section>\r\n      <Section  title='Service Ownership'>\r\n        <p>\r\n          The services my team and I owned had several APIs with some consistently handling 1000+ TPS.\r\n          I learned how to work in such a way that availability was <i>never</i> disrupted.\r\n          Due to the distributed nature of our services—80 servers to support traffic to just one of the services—I learned to design using thread-safe practices like avoiding mutable state as much as possible.\r\n        </p>\r\n        <p>\r\n          Our goal was mostly to keep the vital services running, but we also had tasks to improve the services and keep them up-to-date.\r\n          For example, one of my changes helped reduce CPU usage by approximately 50%, allowing us to downscale the fleet and conserve costs.\r\n        </p>\r\n        <p>\r\n          All of our changes were run through a rigorous alpha and beta integration testing suite as well as a barrage of local tests. \r\n          I learned to develop with a TDD focus and appreciate the savings of continuous integration/delivery.\r\n          I also became acquainted with the usefulness of recording metrics.  Almost every change I did included a new metric to help us determine the effectiveness of the change.\r\n          Improving dashboards (again I like to help others understand my services as well as I do) became an important part of almost every update I pushed out. \r\n        </p>\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport cgmImage from './cgm.png'\r\n\r\nexport default function CgmExperience() {\r\n  return (\r\n    <Experience  \r\n      role=\"Software Engineer\"\r\n      date=\"March 2016 - July 2019\"\r\n      summary={<CgmSummary/>}\r\n      details={<CgmDetails/>}\r\n      image={cgmImage}\r\n    >\r\n    </Experience>);\r\n}\r\n\r\nfunction CgmSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>\r\n        \tDesigned and developed applications and video games under strict legal requirements for security, durability, persistence, and longevity, often as the primary developer\r\n        </li>\r\n        <li>\r\n        \tDemonstrated ability to learn and apply new skills by redesigning an inefficient database (PostgreSQL) to be over 100x faster on all major queries (after only a few days of study regarding databases)\r\n        </li>\r\n        <li>\r\n        \tRedesigned data structures and overall architecture on the company’s core server application to improve efficiency and make the system more robust and modular\r\n        </li>\r\n        <li>Engaged in a leadership and training role for many of the incoming employees.</li>\r\n        <li>\r\n        \tDaily use and love of the C# programming language and Microsoft Windows OS\r\n        </li>\r\n        <li>Learned how to use git, network applications together, work using agile methodologies, use design patterns, develop using TDD, and many other skills</li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nfunction CgmDetails() {\r\n  return (\r\n    <Grid>\r\n      <Section>\r\n        {/* <p> */}\r\n          I legitimately enjoyed my time at CGM.  I grew from a simple intern who was a self-taught programmer, to a Software Engineer with experience and informed opinions.\r\n          I learned what design patterns were, studied them, and applied them in my work to improve my efficiency and simplify the way for others.\r\n          I was considered the Tool Creator and the Optimizer.  Under my direction, codebases and databases alike were simplified and made more efficient.\r\n          Workflows for the team were also improved under my direction with helpful input from others.  I learned to lead by listening and working <i>with</i> those I had responsibility over.\r\n        {/* </p> */}\r\n        <p>\r\n          Ultimately, I left because I wanted to have a bigger positive impact on humanity, and I felt that I had maxed-out on what I could learn at CGM.  \r\n          It was a good starting place, but I had places to go, and people to help, so I took <a  href='#/experience/amazon?switch=true'>a job with Amazon</a>.\r\n        </p>\r\n      </Section>\r\n      <Section  title='LTMS and ETG'>\r\n          I was a major contributor to the design and development of the original Live Table Management System (LTMS) and Electronic Table Games (ETG) servers (see <a href='https://casinogamemaker.com/etg/' target='_blank' rel='noreferrer'>casinogamemaker.com/etg</a>).\r\n          For part of the project, I led a team of two other engineers which produced all functionality of the system except for that of game displays.\r\n          Along with a significant portion of the server, I designed and developed the dealer terminals which took dealer input and scanned cards etc. and sent the data to the server for distribution to player terminals.\r\n        <p>\r\n          I gained significant experience from designing and building the data monitoring dashboard and the database which it ran queries against.\r\n          In particular, I took our old database and redesigned it (after a week of studying databases part-time) such that a query that was running in 30 seconds could execute in 0.3 seconds (100x speedup).  \r\n          I am a quick learner, and I love to make things better than I found them.\r\n          The dashboard also supported features like changing settings and administered permissions for dealers and pit bosses.\r\n        </p>\r\n        <p>\r\n          This was my first experience connecting multiple, disparate applications and syncing them together with a powerful result.  \r\n          It was also my first time doing any significant networking and dealing with strict TCP communication.\r\n          Due to the strict demands for near-perfect persistence of state and data, the team that I led on this project came up with some new and clever solutions to handle disruptions on the network, power loss, and other edge cases in a seamless manner.\r\n          Finally, I created a partner application to simulate the server for development purposes for each developer.\r\n        </p>\r\n      </Section>\r\n      <Section  title='Mathematical Simulations'>\r\n        I produced simulation programs that verified the math behind the slot reels as established by the in-house mathematician.  \r\n        I also built simulators for Keno and Baccarat games.  With some multi-core processing I was able to simulate 9 billion unique game states in less than 24 hours on a simple i5 processor.\r\n      </Section>\r\n      <Section  title='Creative Tools'>\r\n        Additionally, I volunteered my spare time to create tools that helped the artists to create particle generators faster and with advanced features not originally provided by the simple particle library we were using.\r\n        I also took the time to make the UI better (with input from my users) to reduce friction for the artists.\r\n      </Section>\r\n      <Section  title='Games'>\r\n        I personally led the design and development of three of our popular games in their entirety.  I built multiple proof-of-concept games for sales demos as well as internal review.  \r\n        And, I was charged with taking several incomplete or outdated games and bringing them to life.  \r\n        All in all, I learned a great deal about how to prioritize work to meet deadlines in a fast-paced, startup environment; how to (and not to) design software architecture; and how to work with project owners to agree on desired outcomes and then deliver those in a timely manner.\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/coding.57266589.png\";","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExperienceSwitcher from './Switch'\r\nimport StartImage from '../../common/StartImage'\r\nimport Contact from '../../common/Contact'\r\nimport GatechExperience from './GatechExp'\r\nimport SuuExperience from './SuuExp'\r\nimport AmazonExperience from './AmazonExp'\r\nimport CgmExperience from './CgmExp'\r\n\r\nimport codingImage from './coding.png';\r\nimport { Divider, Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // textAlign: \"center\"\r\n  },\r\n  divider: {\r\n    margin: 30,\r\n  },\r\n  experience: {\r\n    maxWidth: \"90%\",\r\n    padding: 20,\r\n    margin: \"auto\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  body: {\r\n    maxWidth: 800\r\n  },\r\n  lists: {\r\n    ...theme.typography.body1,\r\n  },\r\n  text: {\r\n    textIndent: \"2em\",\r\n    marginBottom: 10\r\n  }\r\n}));\r\n\r\nexport default function ExperiencePage() {\r\n  const classes = useStyles();\r\n  const startRef = React.useRef();\r\n\r\n  const clickHandler = () => {\r\n    window.scrollTo(0, startRef.current.offsetTop - 50);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <StartImage onClick={clickHandler} bgImage={codingImage}  strength={400}/>\r\n      </div>\r\n      <div  ref={startRef}>\r\n        <ExperienceSwitcher onChange={clickHandler}>\r\n          <GatechExperience id=\"gatech\"/>\r\n          <SuuExperience    id=\"suu\"/>\r\n          <AmazonExperience id=\"amazon\"/>\r\n          <CgmExperience    id=\"cgm\"/>\r\n        </ExperienceSwitcher>\r\n      </div>\r\n      <Divider  className={classes.divider}  variant='middle'/>\r\n      <Contact/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Experience(props) {\r\n  let classes = useStyles();\r\n\r\n  return (\r\n    // <Paper elevation={3}>\r\n      <Grid \r\n        container \r\n        direction='column'\r\n        alignItems='center'  \r\n        className={classes.experience}\r\n      >\r\n        <Grid container  justify='center'>\r\n          <img  className={classes.logo}  src={props.image} alt=\"\"/>\r\n        </Grid>\r\n\r\n        <Grid \r\n          container \r\n          justify=\"space-between\"\r\n          alignItems=\"baseline\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant='h3'>\r\n                {props.role}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='h4'>\r\n              {props.date}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid container justify='flex-start'>\r\n          {props.subtitle}\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <div  style={{height:20}}></div>\r\n        </Grid>\r\n\r\n        <Grid container  className={classes.body}>\r\n          <Grid item>\r\n            <Typography variant='h4'>\r\n              Summary of Experience\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {props.summary}\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        {/* <Grid item>\r\n          <Typography variant='body2'>\r\n            <i>(See more details below)</i>\r\n          </Typography>\r\n        </Grid> */}\r\n\r\n        <Grid container className={classes.body}>\r\n          <Typography variant='h4'>\r\n            Details\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid container className={classes.body}>\r\n          {props.details}\r\n        </Grid>\r\n\r\n        {/* Other */}\r\n        <div>\r\n          {props.children}\r\n        </div>\r\n      </Grid>\r\n    // </Paper>\r\n  );\r\n}\r\n\r\n\r\nexport function Section(props){\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        {props.title}\r\n      </Typography>\r\n      <Typography variant='body1' component='div'  className={classes.text}>\r\n        {props.text || props.children}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/FlightDemo.832681cc.gif\";","export default __webpack_public_path__ + \"static/media/SoccerTwosFPV.d96dead3.gif\";","import React from \"react\";\r\n\r\nimport { Box, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nimport lunarLander from './FlightDemo.gif';\r\nimport soccerTwosFPV from './SoccerTwosFPV.gif';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    backgroundColor: '#141414',\r\n    maxHeight: 500\r\n  },\r\n  content: {\r\n    marginTop: 30,\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n}));\r\n\r\nexport default function DemoCarousel(props) {\r\n  const classes = useStyles();\r\n\r\n  var height = props.height || window.innerHeight - 100;\r\n  height = Math.max(height, 100);\r\n\r\n  return (\r\n    <div  className={classes.root}  style={{height: height}}>\r\n      <Carousel className='h-100'>\r\n        <Carousel.Item>\r\n          <Grid \r\n            container \r\n            className={classes.content}\r\n            direction='column-reverse' \r\n            justify='flex-start'\r\n            alignItems='center'\r\n          >\r\n            <Grid item>\r\n              <Typography variant='h3' color='primary'>Lunar Lander</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img\r\n                src={lunarLander}\r\n                alt=\"After 15,000 training episodes\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* <Carousel.Caption>\r\n            <Typography variant='h3' color='textPrimary'>Lunar Lander</Typography>\r\n          </Carousel.Caption> */}\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Grid \r\n            container \r\n            className={classes.content}\r\n            direction='column' \r\n            alignItems='center'\r\n          >\r\n            <Grid item>\r\n              <img\r\n                src={soccerTwosFPV}\r\n                alt=\"After 15,000 training episodes\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant='h3' color='primary'>Unity ML-Agents</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\n{/* <Typography variant='body2'>\r\n  <i>\r\n    Photo courtesy of <a href='https://github.com/Unity-Technologies/ml-agents/'>Unity ML-Agents Toolkit GitHub repository</a>\r\n  </i>\r\n</Typography> */}","import React from \"react\";\r\nimport { Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Carousel from './DemoCarousel';\r\nimport Contact from '../../common/Contact';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  divider: {\r\n    margin: 30,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Projects() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Carousel></Carousel>\r\n      </div>\r\n      \r\n      <div id='start' style={{height: 10}}/>\r\n\r\n      <ProjectList>\r\n\r\n      </ProjectList>\r\n\r\n      <div>\r\n        <Divider  className={classes.divider}  variant='middle'/>\r\n        <Contact/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction ProjectList() {\r\n  return (\r\n    <Grid>\r\n      \r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function About() {\r\n  return <Typography  variant='h2'>ABOUT</Typography>;\r\n}","import React, {useState} from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Home from './pages/home/Home';\r\nimport Experience from './pages/experience/Experience';\r\nimport Projects from './pages/projects/Projects';\r\nimport About from './pages/about/About';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n      <Switch>\r\n        <Route path={[\"/experience/:id\", \"/experience\"]}>\r\n          <Experience />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst locations = [\r\n  '/',\r\n  'experience',\r\n  'projects',\r\n  'about',\r\n]\r\n\r\nfunction NavBar() {\r\n  let path = useLocation().pathname.split('/')[1];\r\n  let index = Math.max(0, locations.indexOf(path));\r\n  const [value, setValue] = useState(index);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    window.scrollTo({top: 0});\r\n  }\r\n\r\n  if (index !== value) {\r\n    setValue(index)\r\n  }\r\n  console.log(`path: ${path}, index: ${index}, value: ${value}`);\r\n\r\n  const style = { fontSize: 24 };\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Tabs value={value} onChange={handleChange}>\r\n        <Tab  label='Home'        to=\"\"  component={Link} style={style}/>\r\n        <Tab  label='Experience'  to=\"/experience\"  component={Link} style={style}/>\r\n        <Tab  label='Projects'    to=\"/projects\"  component={Link} style={style}/>\r\n        <Tab  label='About'       to=\"/about\" component={Link} style={style}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#6ec6ff',\r\n      main: '#2196f3',\r\n      dark: '#0069c0',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#66ffa6',\r\n      main: '#00e676',\r\n      dark: '#00b248',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: ['Verdana', '\"Consolas\"', 'Courier New'].join(',')\r\n    },\r\n})\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <ThemeProvider  theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}