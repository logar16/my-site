{"version":3,"sources":["common/StartImage.js","common/ScrollUp.js","common/Contact.js","common/Bottom.js","pages/experience/gatech.png","pages/experience/suu.png","pages/experience/amazon.png","pages/experience/cgm.png","pages/home/ExperienceSummary.js","pages/experience/coding.png","pages/projects/ML-Agents-Banner.png","pages/home/profile-thin.jpg","pages/home/OtherPagesPortal.js","pages/home/profile.jpg","pages/home/Home.js","pages/experience/Switch.js","pages/experience/GatechExp.js","pages/experience/SuuExp.js","pages/experience/AmazonExp.js","pages/experience/CgmExp.js","pages/experience/Experience.js","pages/projects/FlightDemo.gif","pages/projects/SoccerTwosFPV.gif","pages/projects/DemoCarousel.js","pages/projects/SlidingLander.gif","pages/projects/LunarLanderProj.js","pages/projects/UnityMLAgentsProj.js","pages/projects/WIP.png","pages/projects/FutureProj.js","pages/projects/Projects.js","pages/about/Family.jpg","pages/about/Hobbies.png","pages/about/Nebula.jpg","pages/about/Pathway.jpg","pages/about/About.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","tallFill","height","scrollFab","margin","StartImage","props","classes","clickHandler","onClick","bgImage","strength","window","innerHeight","Math","max","min","style","Grid","container","className","direction","alignItems","item","sm","md","left","center","ScrollDown","fabTrans","useSpring","padding","from","config","mass","friction","tension","textTrans","opacity","AnimatedTypography","animated","Typography","justify","div","Fab","component","ScrollUp","top","spacing","paddingRight","y","element","document","getElementById","offsetTop","scrollTo","text","fontFamily","Contact","React","useState","open","setOpen","phone","email","List","dense","ListItemLink","href","ListItemIcon","color","ListItemText","primary","ListItem","button","navigator","clipboard","writeText","Snackbar","onClose","autoHideDuration","Alert","severity","Link","target","Bottom","Container","Divider","logos","maxWidth","maxHeight","backgroundColor","row","moreLink","paddingBottom","textTransform","EducationExperience","ExperienceSummary","experience","gatech","suu","WorkExperience","amazon","cgm","Button","link","Paper","xs","width","src","image","alt","ExperienceText","variant","align","children","textAlign","title","whiteSpace","subtitle","details","Experience","this","gatechImage","suuImage","amazonImage","cgmImage","root","card","PortalGrid","Item","img","expImage","projImage","aboutImage","GridCard","history","useHistory","Card","CardActionArea","push","CardMedia","CardContent","divider","longText","marginTop","marginBottom","experiences","Home","startRef","useRef","current","scrollIntoView","portrait","Intro","ref","id","elevatorPitch","Experiences","Invitation","Hidden","smDown","locations","ExperienceSwitcher","useParams","index","indexOf","value","setValue","query","URLSearchParams","useLocation","search","get","handleChange","event","newValue","replace","cleanUrl","onChange","setTimeout","fontSize","AppBar","position","Tabs","centered","indicatorColor","textColor","Tab","label","DynamicDisplay","display","Children","toArray","find","c","theme","lists","typography","body1","innerList","textIndent","GatechExperience","degree","summary","GatechSummary","GatechDetails","role","date","Section","rel","SuuSummary","SuuDetails","SuuExperience","AmazonExperience","AmazonSummary","AmazonDetails","CgmExperience","CgmSummary","CgmDetails","logo","logoImg","body","ExperiencePage","codingImage","content","DemoCarousel","Carousel","lunarLander","soccerTwosFPV","LunarLander","Entry","landingGif","Body","Summary","Description","UnityMlAgents","mlagentsImage","Details","FutureWork","FutureProjs","wipImage","MultimediaReader","Megalopolis","list","paper","minHeight","description","Projects","useEffect","scroll","handleClick","ProjectList","map","i","Title","About","profileImage","AboutList","familyImage","FamilyDescription","hobbyImage","HobbiesDescription","interestsImage","InterestsDescription","pathImage","StoryDescription","Array","isArray","App","NavBar","path","pathname","split","LinkTab","to","NavLink","activeStyle","isActive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","blue","secondary","teal","createMuiTheme","palette","type","background","default","join","MuiLink","overrides","underlineHover","MuiListItemText","ReactDOM","render","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.b0f6abc8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Fab, makeStyles, Typography } from \"@material-ui/core\";\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Parallax } from \"react-parallax\";\r\nimport {useSpring, animated} from 'react-spring'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  tallFill: {\r\n    height: \"100%\",\r\n  },\r\n  scrollFab: {\r\n    margin: 30,\r\n  },\r\n}));\r\n\r\n\r\nexport default function StartImage(props) {\r\n  const classes = useStyles();\r\n  var clickHandler = props.onClick;\r\n  var bgImage = props.bgImage\r\n  var strength = props.strength || 500;\r\n  var height = props.height || window.innerHeight - 100;\r\n  height = Math.max(height, 100);\r\n  height = Math.min(height, window.innerHeight - 50);\r\n  // console.log(`props.height: ${props.height}, window: ${window.innerHeight}, height: ${height}`)\r\n\r\n  return (\r\n    <Parallax bgImage={bgImage} strength={strength}>\r\n      <div style={{ 'height': height }}>\r\n        <Grid\r\n          container\r\n          className={classes.tallFill}\r\n          direction='row'\r\n          alignItems='stretch'\r\n        >\r\n          <Grid item sm={2} md={4}>\r\n            {props.left}\r\n          </Grid>\r\n\r\n          <Grid item sm={8} md={6}>\r\n            {props.center}\r\n          </Grid>\r\n          \r\n          <Grid item sm={2} md={2}>\r\n            <ScrollDown onClick={clickHandler}/>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    </Parallax>);\r\n  }\r\n\r\nfunction ScrollDown({onClick}) {\r\n  const classes = useStyles();\r\n\r\n  const fabTrans = useSpring({\r\n    padding: 15,\r\n    from: {padding: 10},\r\n    config: {mass: 20, friction: 0, tension: 400}\r\n  });\r\n  const textTrans = useSpring({\r\n    opacity: 1,\r\n    from: {opacity: 0, padding: 5},\r\n    config: { mass: 350, friction: 0, tension: 250},\r\n    // delay: 500,\r\n  })\r\n\r\n  const AnimatedTypography = animated(Typography);\r\n\r\n  return (\r\n    <Grid container direction='column' alignItems='center'  justify='flex-end'  className={classes.tallFill}>\r\n      <animated.div style={fabTrans}>\r\n        <Fab  \r\n          onClick={onClick}  \r\n          component='div'\r\n        >\r\n          <KeyboardArrowDown></KeyboardArrowDown>\r\n        </Fab>\r\n      </animated.div>\r\n      <AnimatedTypography style={textTrans}>\r\n        <i>(scroll down)</i>\r\n      </AnimatedTypography>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Fab, Grid, Typography } from \"@material-ui/core\";\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nexport default function ScrollUp({top}) {\r\n\r\n  const clickHandler = () => {\r\n    var y = 0;\r\n    if (top) {\r\n      const element = document.getElementById(top);\r\n      if (element) {\r\n        y = element.offsetTop - 50;\r\n      }\r\n    }\r\n    window.scrollTo({top: y});\r\n  }\r\n\r\n  return (\r\n    <Grid \r\n      container \r\n      direction='column'\r\n      justify='flex-end'  \r\n      alignItems='flex-end'\r\n      spacing={1}  \r\n      style={{padding: '0px 30px'}}\r\n    >\r\n      <Grid item  style={{paddingRight: 35}}>\r\n        <Fab  \r\n          onClick={clickHandler}  \r\n          component='div'\r\n          // color='primary'\r\n        >\r\n          <KeyboardArrowUp></KeyboardArrowUp>\r\n        </Fab>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography>\r\n          <i>(return to top)</i>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\nimport { Grid, makeStyles, Snackbar } from \"@material-ui/core\";\r\nimport { List, ListItem, ListItemIcon, ListItemText, Link } from \"@material-ui/core\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    fontFamily: 'Consolas'\r\n  }\r\n});\r\n\r\nexport default function Contact() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const phone = \"(435) 668-2254\";\r\n  const email = \"logan.b.jones16@gmail.com\";\r\n\r\n  const phoneHandler = () => {\r\n    navigator.clipboard.writeText(phone);\r\n    setOpen(true);\r\n  }\r\n  const emailHandler = () => {\r\n    navigator.clipboard.writeText(email);\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid  container  justify=\"center\">\r\n        <Grid item>\r\n          <List dense>\r\n            <ListItemLink href=\"https://www.google.com/maps/place/Medford,+OR/\">\r\n              <ListItemIcon>\r\n                <HomeIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Medford, OR\" className={classes.text}/>\r\n            </ListItemLink>\r\n            <ListItem button onClick={phoneHandler}>\r\n              <ListItemIcon>\r\n                <PhoneIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={phone} className='contact'/>\r\n            </ListItem>\r\n            <ListItem button onClick={emailHandler}>\r\n              <ListItemIcon>\r\n                <EmailIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={email} className='contact'/>\r\n            </ListItem>\r\n            <ListItemLink href=\"https://linkedin.com/in/loganbjones16\">\r\n              <ListItemIcon>\r\n                <LinkedInIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"linkedin.com/in/loganbjones16\" className='contact'/>\r\n            </ListItemLink>\r\n            <ListItemLink href=\"https://github.com/logar16\">\r\n              <ListItemIcon>\r\n                <GitHubIcon color=\"primary\"/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"github.com/logar16\" className='contact'/>\r\n            </ListItemLink>\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar open={open} onClose={() => setOpen(false)} autoHideDuration={3000} >\r\n        <Alert  severity=\"success\">\r\n          Copied to clipboard!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction ListItemLink(props) {\r\n  return (\r\n    <ListItem \r\n      button \r\n      component={Link} \r\n      color='textPrimary' \r\n      target=\"_blank\" \r\n      {...props} \r\n    />\r\n  );\r\n}","import React from \"react\";\r\nimport { Container, Divider } from \"@material-ui/core\";\r\nimport ScrollUp from \"./ScrollUp\";\r\nimport Contact from \"./Contact\";\r\n\r\nexport default function Bottom({top}) {\r\n  return (\r\n    <Container>\r\n      <br></br>\r\n      <br></br>\r\n      <ScrollUp top={top}/>\r\n      <Divider  style={{margin: 30}}/>\r\n      <Contact/>\r\n    </Container>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/gatech.c478aa7c.png\";","export default __webpack_public_path__ + \"static/media/suu.1d4c635b.png\";","export default __webpack_public_path__ + \"static/media/amazon.524b5e5c.png\";","export default __webpack_public_path__ + \"static/media/cgm.04180620.png\";","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, Grid, Paper, Typography } from \"@material-ui/core\";\r\n\r\nimport gatechImage from '../experience/gatech.png'\r\nimport suuImage from '../experience/suu.png'\r\nimport amazonImage from '../experience/amazon.png'\r\nimport cgmImage from '../experience/cgm.png'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  logos: {\r\n    maxWidth: '98%',\r\n    maxHeight: '98%',\r\n    backgroundColor: '#eeeeee'\r\n  },\r\n  row: {\r\n    padding: \"3% 3% 1%\",\r\n  },\r\n  item: {\r\n    backgroundColor: '#2c2c2c'\r\n  },\r\n  moreLink: {\r\n    paddingBottom: 5\r\n  },\r\n  button: {\r\n    textTransform: 'none'\r\n  }\r\n});\r\n\r\nexport function EducationExperience() {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"space-around\" spacing={2}>\r\n      <ExperienceSummary   experience={gatech}/>\r\n      <ExperienceSummary   experience={suu}/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport function WorkExperience() {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"space-around\" spacing={2}>\r\n      <ExperienceSummary  experience={amazon}/>\r\n      <ExperienceSummary  experience={cgm}/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nfunction ExperienceSummary({experience}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n      <Button className={classes.button} href={experience.link}>\r\n        <Paper className={classes.item}>\r\n          <Grid \r\n            container \r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.row}\r\n          >\r\n            <Grid item  xs={12} md={6}>\r\n              <Paper  className={classes.logos}>\r\n                <img style={{width: '100%', height: '100%'}} src={experience.image} alt=\"\"/>\r\n              </Paper>\r\n            </Grid>\r\n            \r\n            <Grid item xs={1} md={1}></Grid>\r\n\r\n            <Grid item xs={12} md={5}>\r\n              <ExperienceText>{experience}</ExperienceText>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n          <Typography variant='body2' align='center' color='textSecondary' className={classes.moreLink}>\r\n            <i>click for more details</i>\r\n            {/* <Link href={experience.link}>More</Link> */}\r\n          </Typography>\r\n        </Paper>\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n  \r\nfunction ExperienceText(props) {\r\n  let experience = props.children;\r\n\r\n  return (\r\n    <Container style={{textAlign: 'left'}}>\r\n      <Grid container direction=\"column\"  alignItems='stretch'>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">\r\n            {experience.title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\"  style={{whiteSpace: \"pre-line\"}}>\r\n            {experience.subtitle}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\"  style={{whiteSpace: \"pre-line\"}}>\r\n            {experience.details}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nfunction Experience(title, subtitle, details, link, image) {\r\n  this.title = title;\r\n  this.subtitle = subtitle;\r\n  this.details = details;\r\n  this.link = `#/experience/${link}?switch=true`;\r\n  this.image = image;\r\n}\r\n\r\nconst gatech = new Experience(\r\n  \"Master of Science\",\r\n  \"Major: Computer Science\\nConcentration: Interactive Intelligence\",\r\n  \"Graduated Dec 2020\\nGPA 3.80\",\r\n  \"gatech\",\r\n  gatechImage\r\n);\r\nconst suu = new Experience(\r\n  \"Bachelor of Science\",\r\n  \"Major: Biology\\nMinor: Chemistry\",\r\n  \"Graduated May 2016\\nGPA 3.77\",\r\n  \"suu\",\r\n  suuImage\r\n);\r\n\r\nconst amazon = new Experience(\r\n  \"Amazon\",\r\n  \"Software Development Engineer I\",\r\n  \"Aug 2019 - Sep 2020\",\r\n  \"amazon\",\r\n  amazonImage\r\n);\r\n\r\nconst cgm = new Experience(\r\n  \"Casino Game Maker\",\r\n  \"Software Engineer\",\r\n  \"April 2016 - July 2019\",\r\n  \"cgm\",\r\n  cgmImage\r\n);","export default __webpack_public_path__ + \"static/media/coding.57266589.png\";","export default __webpack_public_path__ + \"static/media/ML-Agents-Banner.224a0854.png\";","export default __webpack_public_path__ + \"static/media/profile-thin.99be43f3.jpg\";","\r\nimport { Grid, Typography, makeStyles, Card, CardContent, CardActionArea, CardMedia } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport expImage from '../experience/coding.png'\r\nimport projImage from '../projects/ML-Agents-Banner.png'\r\nimport aboutImage from './profile-thin.jpg'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 10,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n  },\r\n  image: {\r\n    height: 200,\r\n  }\r\n});\r\n\r\n\r\nexport default function PortalGrid() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Grid \r\n      container \r\n      justify='space-around'\r\n      spacing={3} \r\n      className={classes.root}\r\n    >\r\n      <Item title='Experience'  link='/experience'  img={expImage}>\r\n        My educational background and work experience.  If you want to know what I know, look here\r\n      </Item>\r\n      <Item title='Projects'  link='/projects'  img={projImage}>\r\n        Projects I am working on to stay sharp outside of work and school\r\n      </Item>\r\n      <Item title='About' link='/about' img={aboutImage}>\r\n        Information about me on a more personal level\r\n      </Item>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction Item({title, link, img, children}) {\r\n  return (\r\n    <Grid item  xs={8} sm={6} md={4}>\r\n      <GridCard title={title} link={link} img={img}>\r\n        {children}\r\n      </GridCard>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction GridCard({title, link, img, children}) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(link);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea className={classes.card}  onClick={handleClick}>\r\n        <CardMedia  image={img} className={classes.image}>\r\n          {/* <img src={img} className={classes.image} /> */}\r\n        </CardMedia>\r\n        <CardContent  className={classes.card}>\r\n          <Grid container direction='column' justify='flex-start'>\r\n            <Typography variant='h4'  align='center'>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant='body1' color='textSecondary'>\r\n              {children}\r\n            </Typography>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/profile.61a0a596.jpg\";","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Divider, Hidden, Container } from \"@material-ui/core\";\r\n\r\nimport StartImage from '../../common/StartImage';\r\nimport Bottom from \"../../common/Bottom\";\r\n\r\nimport {EducationExperience, WorkExperience} from './ExperienceSummary';\r\nimport ButtonGrid from './OtherPagesPortal';\r\n\r\nimport portrait from './profile.jpg';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    margin: '50px 30px',\r\n  },\r\n  longText: {\r\n    maxWidth: 800,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  experiences: {\r\n    maxWidth: 1200,\r\n    margin: 'auto'\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const startRef = React.useRef();\r\n\r\n  const clickHandler = () => {\r\n    startRef.current.scrollIntoView();\r\n  }\r\n\r\n  window.scrollTo({top: 0});\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <StartImage \r\n          onClick={clickHandler} \r\n          bgImage={portrait} \r\n          strength={400}\r\n          left={<Intro/>}  \r\n        />\r\n      </div>\r\n      <div  ref={startRef}  id='start'></div>\r\n      <Container>\r\n        <Divider className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Typography \r\n              className={classes.longText} variant=\"body1\" align='justify'>\r\n                {elevatorPitch}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <Experiences/>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n        <ButtonGrid/>\r\n\r\n        <Divider  className={classes.divider} variant='middle'></Divider>\r\n        \r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Invitation className={classes.longText}/>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Bottom top='start'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Intro() {\r\n  return (\r\n    <Grid container justify='center' alignItems='center' style={{height: '100%'}}>\r\n      <Hidden smDown>\r\n        <p className='intro large-text' align='center'>\r\n          Hello!\r\n          <br></br>\r\n          I'm Logan\r\n        </p>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nfunction Experiences() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div  className={classes.experiences}>\r\n      <Typography variant=\"h3\"  align='center'>Education</Typography>\r\n      <EducationExperience/>\r\n\r\n      <Divider  className={classes.divider} variant='middle'></Divider>\r\n\r\n      <Typography variant=\"h3\"  align='center'>Work Experience</Typography>\r\n      <WorkExperience/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst elevatorPitch = `My name is Logan Jones. I'm a self-taught programmer with a Master’s degree in \r\nArtificial Intelligence and Machine Learning. Over the last four years, I've been working as a Software Engineer. \r\nNow I'm trying to break into a new role as a Machine Learning researcher and engineer.  \r\nI love Reinforcement Learning and making AI agents that can make decisions on their own!`\r\n\r\n\r\nfunction Invitation(props) {\r\n  return (\r\n    <div  style={{marginTop: 30}}>\r\n      <Typography align='justify' className={props.className}>\r\n        You can find ways to contact me below. I'm always happy to connect with other humans! \r\n        I am looking for ML research and engineering positions at this time, and 100% remote if possible.  \r\n        If you or someone you know wants to hire someone like me, please let me know!  Until then,\r\n      </Typography>\r\n      {/* <Typography align='justify' className={props.className}>\r\n        Check out the other sections of the site to learn more about my <Link href='my-site#/experience/gatech?switch=true'>education</Link>\r\n        , <Link href='#/experience/amazon?switch=true'>work experience</Link>\r\n        , <Link href='#/projects'>ongoing projects</Link>, \r\n        and <Link href='#/about'>general information</Link> about me and how I got here.\r\n        You can also find ways to contact me below. I'm always happy to connect! \r\n        I am looking for remote positions at this time.  If you or someone you know wants to hire someone like me, please let me know!  \r\n      </Typography> */}\r\n      <Typography align='center'>\r\n        Cheers!\r\n      </Typography>\r\n    </div>\r\n  );  \r\n}","import React, { useState } from \"react\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst locations = [\r\n  'gatech',\r\n  'suu',\r\n  'amazon',\r\n  'cgm',\r\n]\r\n\r\n\r\nexport default function ExperienceSwitcher(props) {\r\n  const history = useHistory();\r\n  let {id} = useParams();\r\n  var index = locations.indexOf(id)\r\n  index = Math.max(0, index)\r\n  const [value, setValue] = useState(index)\r\n  \r\n  let query = new URLSearchParams(useLocation().search);\r\n  query = query.get('switch');\r\n  // console.log(`id: ${id}, index: ${index}, value: ${value}, query: ${query}`)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // console.log('new value:', newValue);\r\n    cleanUrl(locations[newValue]);\r\n    setValue(newValue);\r\n    props.onChange();\r\n  }\r\n\r\n  if (query) {\r\n    setTimeout(() => { handleChange(null, index) }, 100);\r\n  }\r\n  // else if (index !== value) {\r\n  //   setValue(index);\r\n  //   props.onChange();\r\n  // }\r\n  const style = { fontSize: 20 };\r\n\r\n  return (\r\n      <div>\r\n        <AppBar id=\"switcher\" position=\"static\" color=\"transparent\">\r\n          <Tabs \r\n            centered\r\n            value={value} \r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n          >\r\n            <Tab  label='Georgia Tech' style={style}  component='div' />\r\n            <Tab  label='SUU'     style={style} component='div'/>\r\n            <Tab  label='Amazon'  style={style} component='div'/>\r\n            <Tab  label='CGM'     style={style} component='div'/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <DynamicDisplay value={locations[value]}>{props.children}</DynamicDisplay>\r\n      </div>\r\n  );\r\n\r\n  function cleanUrl(id) {\r\n    if (!id) \r\n      return;\r\n\r\n    history.replace(`/experience/${id}`);  //Clean up the URL, but it dilutes the history\r\n  }\r\n}\r\n\r\nfunction DynamicDisplay(props) {\r\n  var value = props.value;\r\n  var children = React.Children.toArray(props.children);\r\n  var display = children.find(c => c.props.id === value);\r\n  // console.log(value, display);\r\n  return (\r\n    <div>\r\n      {display}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Link, Typography } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport gatechImage from './gatech.png'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lists: {\r\n    ...theme.typography.body1,\r\n  },\r\n  innerList: {\r\n    textIndent: 5,\r\n  }\r\n}));\r\n\r\nexport default function GatechExperience() {\r\n  let degree = (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        Major: Computer Science\r\n      </Typography>\r\n      <Typography variant='h5'>\r\n        Emphasis: Interactive Intelligence\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n  \r\n  let summary = <GatechSummary/>;\r\n  let details = <GatechDetails/>;\r\n\r\n  return (\r\n  <Experience  \r\n    role=\"Master of Computer Science\"\r\n    date=\"Dec 2020\"\r\n    subtitle={degree}\r\n    summary={summary}\r\n    details={details}\r\n    image={gatechImage}\r\n    >\r\n  </Experience>);\r\n}\r\n\r\n\r\nfunction GatechSummary() {\r\n  let classes = useStyles();\r\n  return (\r\n    <Typography component='div'>\r\n      <ul className={classes.lists}>\r\n        <li>Degree specialization in Artificial Intelligence and Machine Learning</li>\r\n        <li>Completed challenging assignments by leveraging skills in Python and powerful libraries such as NumPy, SciPy, pandas, and the neural network libraries Keras and PyTorch</li>\r\n        <li>Built AI/ML agents that solved problems using modern AI/ML techniques such as (bolded were built from scratch, others were using open-source implementations):\r\n          <ul>\r\n            <li><i>Reinforcement Learning</i>: <b>Value/Policy Iteration, Q-Learning, Deep Q-Networks</b>, multi-agent training in zero-sum environments</li>\r\n            <li><i>Supervised Learning</i>: <b>Deep Convolutional Neural Nets</b> (several visual tasks from classification to style transfer), <b>Decision Trees and Random Forests</b>, K-Nearest Neighbors, Support Vector Machines, as well as Bagging and Boosting\r\n              <ul>\r\n                <li><i>Machine Translation</i>: <b>RNNs, LSTMs, Seq2Seq, and Transformer Encoder</b></li>\r\n              </ul>\r\n            </li>\r\n            <li><i>Unsupervised Learning</i>: <b>Simulated Annealing</b>, Genetic Algorithms, MIMIC, PCA, ICA, and Expectation Maximization</li>\r\n            <li><i>Search</i>: <b>A* Search</b>, and <b>Minimax</b> (with Alpha-Beta Pruning)</li>\r\n          </ul>\r\n        </li>\r\n        <li>Collaborated with teams to build a prenatal healthcare application</li>\r\n        <li>Gained experience with Unity's ML-Agents during a team project that explored multi-agent Reinforcement Learning models with memory and attention</li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// <ul>\r\n//   <li>Deeply involved in every stage of the project—from design to implementation</li>\r\n//   <li>Quickly learned and built the UI using React and Javascript which were technologies previously unknown to me.  The UI contained multiple pages/views, data display dashboards, and interactions with a database, all done within less than 50 hours of work</li>\r\n//   <li>This app also included learning about FHIR and how to work with health data</li>\r\n// </ul>\r\n\r\n\r\n\r\nfunction GatechDetails() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Section>\r\n        This degree was an awesome opportunity to learn new things and stretch myself. \r\n        I worked full-time while working on this degree part-time, and it was not easy.  \r\n        As a result, I learned how to pace myself, stay organized, and relentlessly prioritize.  \r\n        I also learned I can do hard things.\r\n        It changed my mind about several topics related to technology and inspired me as to what I want out of a career.\r\n        Below are some specific skills I learned, organized by course.\r\n      </Section>\r\n      <Section  title='Deep Learning' id='DL'>\r\n        In this class, I learned about automatic differentiation, the nuances of gradient descent (e.g., vanishing gradients),\r\n        as well as modern applications of deep neural networks in the domains of supervised, unsupervised, and reinforcement learning.\r\n        I hand-crafted my own forward and backward passes for linear and convolutional layers (and their loss functions).\r\n        Through this, I gained greater appreciation for the difficulties of deep learning as well as became aware of many more interesting applications of the technology.\r\n        This class exposed me to <b>PyTorch</b>, a neural network library that I now greatly enjoy.\r\n        Along with lectures from a quality professor, I received instruction from ML researchers at Facebook applying DL in the real world.\r\n        For <Link href=\"https://github.gatech.edu/ljones91/cs7643-project\" target=\"_blank\" rel='noreferrer'>the final project</Link>, \r\n        I worked with a team to train and analyze Reinforcement Learning models in a multi-agent environment trained with limited observations and the addition of memory.\r\n        This was done using the Unity ML-Agents Soccer-Twos environment and the ML-Agents training code (with some modifications).  More details can be found in the <Link href='#/projects?to=mlagents'>Projects page</Link>.\r\n      </Section>\r\n      <Section  title='Machine Learning'  id='ML'>\r\n        This course included a broad survey of Machine Learning techniques.  I covered traditional classification methods such as decision trees or k-means.\r\n        I also learned about many new and interesting methods such as neural networks, support vector machines, K-means clustering, and expectation maximization.\r\n        Assignments included gathering data, training multiple models, and evaluating and comparing their performance in multiple areas.\r\n        I used the <b>SciPy</b> and <b>NumPy</b> libraries extensively.\r\n      </Section>\r\n      <Section title='Reinforcement Learning' id='RL'>\r\n        Perhaps my favorite course at Georgia Tech! I learned about the Bellman Equation, Value and Policy Iteration, Q-Learning, Deep Q-Networks (DQN), and Game Theory (for multi-agent environments).\r\n        The most interesting project was replicating the DQN algorithm initially proposed by DeepMind to solve the OpenAI \"Lunar Lander\" environment.\r\n        At the time, I did the project with Keras, but later (after the Deep Learning class), I converted it to use <b>PyTorch</b> (see <Link href='#/projects?to=lunarLander'>Projects</Link>).\r\n        The project forced me to really dive into RL with neural networks as state approximators, which I have now embraced wholeheartedly.\r\n        I also learned how to create an efficient setup for testing and evaluation so that exploration of models and hyperparameters could be done quickly and efficiently.\r\n      </Section>\r\n      <Section  title=\"Other Courses\" id=\"other\">\r\n        Some other courses of interest that I took were:\r\n        <ul className={classes.innerList}>\r\n          <li>Machine Learning for Trading\r\n            <ul>\r\n              <li>Familiarized with the powerful Python library <b>pandas</b> and its use with time series data</li>\r\n              <li>Used traditional supervised as well as RL algorithms for predicting buy/sell position movements using historical data and achieving consistently positive returns</li>\r\n              <li>Combined decision trees to create random forests for better accuracy</li>\r\n            </ul>\r\n          </li>\r\n          <li>Artificial Intelligence\r\n            <ul>\r\n              <li>Learned how to use NumPy and vectorization to efficiently work with large arrays of data</li>\r\n              <li>Built a minimax algorithm that could win in the game of Isolation more than half the time against the assignment's difficult test bot</li>\r\n              <li>Implemented a uni-, bi-, and tri-directional A* algorithm to find shortest distance between two or three points of a graph</li>\r\n              <li>Introduced to concepts like Bayesian inference and bagging and boosting</li>\r\n            </ul>\r\n          </li>\r\n          <li>Knowledge-Based AI\r\n            <ul>\r\n              <li>Built an AI that could perform as well as a child on the Raven's Progressive Matrices intelligence test</li>\r\n              <li>Learned of the many ways to represent knowledge and understanding for intelligent agents, such as semantic networks, frames, and case-based/analogical/meta methods of reasoning</li>\r\n            </ul>\r\n          </li>\r\n          <li>Intro to Health Informatics\r\n            <ul>\r\n              <li>Built a solid React Web app with no prior experience and in less than 50 hours\r\n                <ul>\r\n                  <li>App included multiple pages/views, data display dashboards, and interactions with a database</li>\r\n                  <li>This experience gave me the confidence to build this React website!</li>\r\n                </ul>\r\n              </li>\r\n              <li>Learned about <b>FHIR</b> and other healthcare-related standards and formats</li>\r\n            </ul>\r\n          </li>\r\n          <li>Software Engineering and Software Architecture\r\n            <ul>\r\n              <li>These two classes improved how I design systems and communicate those designs to other engineers</li>\r\n              <li>Worked with a team as a driving force of the team to accomplish goals in a timely manner and effectively divide work</li>\r\n              <li>Improved in Java coding both for backend software and Android app development</li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport suuImage from './suu.png'\r\n\r\n\r\nfunction SuuSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>Majored in physical sciences, but also studied Psychology and Computer Science</li>\r\n        <li>Graduated magna cum laude with overall GPA of 3.77</li>\r\n        <li>Graduated from the university's Honors Program with a multidisciplinary thesis</li>\r\n        <li>Completed several Java based CS courses to gain foundational knowledge of\r\n          <ul>\r\n            <li>Object-Oriented Programming</li>\r\n            <li>Data Structures and Algorithms</li>\r\n          </ul>\r\n        </li>\r\n        <li>Excelled in difficult courses ranging from <i>Organic Chemistry</i> to <i>Cell and Molecular Biology</i></li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction SuuDetails() {\r\n  return (\r\n    <Grid container>\r\n      <Section  title='Computer Science'>\r\n        Although this was not a direct part of my undergraduate degree, I took several CS classes at SUU.  \r\n        I did this to supplement my personal study of the subject via side-projects.\r\n        In these classes I learned about the basics of OOP and O-notation etc., and I was introduced to a way of thinking about problems that is fundamental to solving them effectively with computer programming.\r\n      </Section>\r\n      <Section  title='Biology and Chemistry'>\r\n        I chose to study Biology because of my interest in learning about my own body and the functions of other incredible biological systems.\r\n        I was most interested in studying the brain and learning about how it worked, from a physiological as well as a psychological perspective.\r\n        Starting with the basic laws of Chemistry and taking classes like Molecular Biology, I learned fundamentals.  \r\n        These combined and connected to help me understand details and building blocks that allowed for the bigger picture of organisms and ecology.\r\n        I am glad I got my undergraduate degree in Biology and Chemistry, as it gives me a greater breadth of knowledge and appreciation for sciences and people than I think a singular study of Computer Science would.\r\n      </Section>\r\n      <Section  title='Psychology'>\r\n        I have a fascination with human psychology and learning how humans learn and think.\r\n        The most enlightening Psychology course I took while at SUU was definitely Reinforcement Learning.\r\n        The class expanded my understanding and gave me clear insights into behavior and gave me direction for my later studies in Machine Learning.\r\n      </Section>\r\n      <Section  title='Honors Thesis'>\r\n        For my Honors Thesis, I combined my knowledge of Biology and Psychology along with my budding passion for Computer Science with my desire to write fiction.\r\n        The interdisciplinary project resulted in a Science Fiction novella that included several real technologies (scaled up) \r\n          from brain-computer interfaces to robotic analogs to <Link href='https://newscenter.lbl.gov/2013/12/19/a-micro-muscular-break-through/#:~:text=A%20team%20of%20researchers%20with%20the%20U.S.%20Department,%E2%80%93%20faster%20than%20the%20blink%20of%20an%20eye.' target='_blank' rel='noreferrer'>muscles using vanadium dioxide</Link>. \r\n        It was an adventure pulling together several of my passions while also completing a difficult final semester.  \r\n      </Section>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function SuuExperience() {\r\n  let degree = (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        Major: Biology\r\n      </Typography>\r\n      <Typography variant='h5'>\r\n        Minor: Chemistry\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Experience  \r\n      role=\"Bachelor of Science\"\r\n      date=\"May 2016\"\r\n      subtitle={degree}\r\n      details={<SuuDetails/>}\r\n      summary={<SuuSummary/>}\r\n      image={suuImage}\r\n    >\r\n    </Experience>);\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport amazonImage from './amazon.png'\r\n\r\n\r\nexport default function AmazonExperience() {\r\n  return (\r\n    <Experience  \r\n      role=\"Software Development Engineer I\"\r\n      date=\"Aug 2019 - Sept 2020\"\r\n      summary={<AmazonSummary/>}\r\n      details={<AmazonDetails/>}\r\n      image={amazonImage}\r\n    >\r\n    </Experience>);\r\n}\r\n\r\n\r\nfunction AmazonSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>\r\n          Took the lead as the primary designer and implementer of a major API addition to an integral service which owned Amazon’s third-party fulfillment data\r\n        </li>\r\n        <li>\r\n        \tHands on experience with OOP principles and distributed computing for two, low-latency and high-transaction services\r\n        </li>\r\n        <li>\r\n          Demonstrated productivity by leading the team in approved designs and code commits for several months\r\n        </li>\r\n        <li>\r\n        \tGained familiarity with macOS and the UNIX terminal, including doing complicated queries over months of log data to retrieve millions of data keys using the basic UNIX commands\r\n        </li>\r\n        <li>\r\n          Safely increased security for a major service by adding OAuth 2.0 based security without any loss of functionality or availability\r\n        </li>\r\n        <li>\r\n          Picked up new skills regarding API design and working with a NoSQL database\r\n        </li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AmazonDetails() {\r\n  return (\r\n    <Grid>\r\n      <Section>\r\n        At Amazon, I was part of a small team working on the backend of Amazon's eCommerce.\r\n        In particular, our services tracked inventory availability and fulfillment capabilities for Third-party sellers, a significant portion of Amazon's business on its retail website.\r\n        I worked with experienced engineers to safely make changes (some small, but some significant) to the services without loss of availability or increased latencies.\r\n        After a year of working there, I came to realize that working in the backend and maintaining an established service was not for me.  \r\n        I was going into my last semester of my <Link href='#/experience/gatech?switch=true'>Master's in CS and Machine Learning</Link>, and so I left Amazon to focus on finishing my degree and finding the right job for me.\r\n      </Section>\r\n      <Section  title='Increasing Service Responsibilities'>\r\n        One of our services was chosen to consolidate an older, Tier 1 (critical), service's responsibilities.  \r\n        I was tasked with designing how our service would handle the deprecated service's traffic among other migration concerns.\r\n        I designed a new API for our service as well as a method for moving traffic to our service while slowly phasing out the old one without any lost requests.\r\n        This opportunity improved my understanding of RESTful service design greatly.  \r\n        I also gained useful experience with a NoSQL datastore.\r\n        <p>\r\n          I implemented the new designs without assistance from team members as they did not know how the REST library/integration worked for that particular service, nor much about how the Guice dependency injection worked.  \r\n          Not only did I implement the new API (without issue in production), but I also wrote up some useful documentation for all who followed.  \r\n          This highlights something else about me, I love helping others succeed.  \r\n          Even though I knew I was going to leave the team soon, I cared about those who would follow me and so I ensured that the documentation was helpful and thorough.\r\n        </p>\r\n      </Section>\r\n      <Section  title='Service Ownership'>\r\n        <p>\r\n          The services my team and I owned had several APIs with some consistently handling 1000+ TPS.\r\n          I learned how to work in such a way that availability was <i>never</i> disrupted.\r\n          Due to the distributed nature of our services—80 servers to support traffic to just one of the services—I learned to design using thread-safe practices like avoiding mutable state as much as possible.\r\n        </p>\r\n        <p>\r\n          Our goal was mostly to keep the vital services running, but we also had tasks to improve the services and keep them up-to-date.\r\n          For example, one of my changes helped reduce CPU usage by approximately <i>50%</i>, allowing us to downscale the fleet and conserve costs.\r\n        </p>\r\n        <p>\r\n          All of our changes were run through a rigorous alpha and beta integration testing suite as well as a barrage of local tests. \r\n          I learned to develop with a TDD focus and appreciate the savings of continuous integration/delivery.\r\n          I also became acquainted with the usefulness of recording metrics.  Almost every change I did included a new metric to help us determine the effectiveness of the change.\r\n          Improving dashboards (again I like to help others understand my services as well as I do) became an important part of almost every update I pushed out. \r\n        </p>\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\n\r\nimport {Experience, Section} from \"./Experience\"\r\n\r\nimport cgmImage from './cgm.png'\r\n\r\nexport default function CgmExperience() {\r\n  return (\r\n    <Experience  \r\n      role=\"Software Engineer\"\r\n      date=\"March 2016 - July 2019\"\r\n      summary={<CgmSummary/>}\r\n      details={<CgmDetails/>}\r\n      image={cgmImage}\r\n    >\r\n    </Experience>);\r\n}\r\n\r\nfunction CgmSummary() {\r\n  return (\r\n    <Typography component='div'>\r\n      <ul>\r\n        <li>\r\n        \tDesigned and developed applications and video games under strict legal requirements for security, durability, persistence, and longevity—often as the primary developer\r\n        </li>\r\n        <li>\r\n        \tDemonstrated ability to learn and apply new skills by redesigning an inefficient database (PostgreSQL) to be over 100x faster on all major queries after only a few days of study regarding databases\r\n        </li>\r\n        <li>\r\n        \tRedesigned data structures and overall architecture on the company’s core server application to improve efficiency and make the system more robust and modular\r\n        </li>\r\n        <li>Engaged in a leadership and training role for many of the incoming employees.</li>\r\n        <li>\r\n        \tDaily use and love of the C# programming language and Microsoft Windows OS\r\n        </li>\r\n        <li>Learned how to use Git, network applications together, use design patterns, develop using TDD and in an \"agile\" way, and many other skills</li>\r\n        <li>Relentlessly prioritized to deliver the most value to both internal and external customers</li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nfunction CgmDetails() {\r\n  return (\r\n    <Grid>\r\n      <Section>\r\n        {/* <p> */}\r\n          I legitimately enjoyed my time at CGM.  I grew from a simple intern who was a self-taught programmer, to a Software Engineer with experience and informed opinions.\r\n          I learned what design patterns were, studied them, and applied them in my work to improve my efficiency and simplify the way for others.\r\n          I was considered the Tool Creator and the Optimizer.  Under my direction, codebases and databases alike were simplified and made more efficient.\r\n          Workflows for the team were also improved under my direction with helpful input from others.  I learned to lead by listening and working <i>with</i> those I had responsibility over.\r\n        {/* </p> */}\r\n        <p>\r\n          Ultimately, I left because I wanted to have a bigger positive impact on humanity, and I felt that I had maxed-out what I could learn at CGM.  \r\n          It was a good starting place, but I had places to go, and people to help, so I took <Link href='#/experience/amazon?switch=true'>a job with Amazon</Link>.\r\n        </p>\r\n      </Section>\r\n      <Section  title='LTMS and ETG'>\r\n          I was a major contributor to the design and development of the original Live Table Management System (LTMS) and Electronic Table Games (ETG) servers (see <Link href='https://casinogamemaker.com/etg/' target='_blank' rel='noreferrer'>casinogamemaker.com/etg</Link>).\r\n          For part of the project, I led a team of two other engineers which produced all functionality of the system except for that of game displays.\r\n          Along with a significant portion of the server, I designed and developed the dealer terminals which took dealer input and scanned cards etc. and sent the data to the server for distribution to player terminals.\r\n        <p>\r\n          I gained significant experience from designing and building the data monitoring dashboard and the database which it ran queries against.\r\n          In particular, I took our old database and redesigned it (after a week of studying databases part-time) such that a query that was running in 30 seconds could execute in 0.3 seconds (100x speedup).  \r\n          I am a quick learner, and I love to make things better than I found them.\r\n          The dashboard also supported features like changing settings and administered permissions for dealers and pit bosses.\r\n        </p>\r\n        <p>\r\n          This was my first experience connecting multiple, disparate applications and syncing them together with a powerful result.  \r\n          It was also my first time doing any significant networking and dealing with strict TCP communication.\r\n          Due to the strict demands for near-perfect persistence of state and data, the team that I led on this project came up with some new and clever solutions to handle disruptions on the network, power loss, and other edge cases in a seamless manner.\r\n          Finally, I created a partner application to simulate the server for development purposes for each developer.\r\n        </p>\r\n      </Section>\r\n      <Section  title='Mathematical Simulations'>\r\n        I produced simulation programs that verified the math behind the slot reels as established by the in-house mathematician.  \r\n        I also built simulators for Keno and Baccarat games.  With some multi-core processing I was able to simulate 9 billion unique game states in less than 24 hours on a simple i5 processor (2016 variety).\r\n      </Section>\r\n      <Section  title='Creative Tools'>\r\n        Additionally, I volunteered my spare time to create tools that helped the artists to create particle generators easier and faster and with advanced features not originally provided by the simple particle library we were using.\r\n        I also took the time to make the UI better (with input from my users) to reduce friction for the artists and maximize the new capabilities.\r\n      </Section>\r\n      <Section  title='Games'>\r\n        I personally led the design and development of three of our popular games in their entirety.  I built multiple proof-of-concept games for sales demos as well as internal review.  \r\n        And, I was charged with taking several incomplete or outdated games and bringing them to life.  \r\n        All in all, I learned a great deal about how to prioritize work to meet deadlines in a fast-paced, startup environment; how to (and not to) design software architecture; and how to work with project owners to agree on desired outcomes and then deliver those in a timely manner.\r\n      </Section>\r\n    </Grid>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExperienceSwitcher from './Switch'\r\nimport StartImage from '../../common/StartImage'\r\nimport Bottom from \"../../common/Bottom\";\r\nimport GatechExperience from './GatechExp'\r\nimport SuuExperience from './SuuExp'\r\nimport AmazonExperience from './AmazonExp'\r\nimport CgmExperience from './CgmExp'\r\n\r\nimport codingImage from './coding.png';\r\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // textAlign: \"center\"\r\n  },\r\n  experience: {\r\n    maxWidth: \"90%\",\r\n    padding: 20,\r\n    margin: \"auto\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"100%\",\r\n    backgroundColor: 'white'\r\n  },\r\n  logoImg: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  body: {\r\n    maxWidth: 800\r\n  },\r\n  lists: {\r\n    ...theme.typography.body1,\r\n  },\r\n  text: {\r\n    textIndent: \"2em\",\r\n    marginBottom: 10\r\n  }\r\n}));\r\n\r\nexport default function ExperiencePage() {\r\n  const classes = useStyles();\r\n  const startRef = React.useRef();\r\n\r\n  window.scrollTo({top: 0});\r\n\r\n  const clickHandler = () => {\r\n    window.scrollTo(0, startRef.current.offsetTop - 50);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <StartImage onClick={clickHandler} bgImage={codingImage}  strength={400}/>\r\n      </div>\r\n      <div id='start' ref={startRef}>\r\n        <ExperienceSwitcher onChange={clickHandler}>\r\n          <GatechExperience id=\"gatech\"/>\r\n          <SuuExperience    id=\"suu\"/>\r\n          <AmazonExperience id=\"amazon\"/>\r\n          <CgmExperience    id=\"cgm\"/>\r\n        </ExperienceSwitcher>\r\n      </div>\r\n      <Bottom top='start'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Experience(props) {\r\n  let classes = useStyles();\r\n\r\n  return (\r\n    // <Paper elevation={3}>\r\n      <Grid \r\n        container \r\n        direction='column'\r\n        alignItems='center'  \r\n        className={classes.experience}\r\n      >\r\n        <Grid container  justify='center'>\r\n          <Paper  className={classes.logo}>\r\n            <img  className={classes.logoImg}  src={props.image} alt=\"\"/>  \r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid \r\n          container \r\n          justify=\"space-between\"\r\n          alignItems=\"baseline\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant='h3'>\r\n                {props.role}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='h4'>\r\n              {props.date}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid container justify='flex-start'>\r\n          {props.subtitle}\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <div  style={{height:20}}></div>\r\n        </Grid>\r\n\r\n        <Grid container  className={classes.body}>\r\n          <Grid item>\r\n            <Typography variant='h4'>\r\n              Summary of Experience\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {props.summary}\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        {/* <Grid item>\r\n          <Typography variant='body2'>\r\n            <i>(See more details below)</i>\r\n          </Typography>\r\n        </Grid> */}\r\n\r\n        <Grid container className={classes.body}>\r\n          <Typography variant='h4'>\r\n            Details\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid container className={classes.body}>\r\n          {props.details}\r\n        </Grid>\r\n\r\n        {/* Other */}\r\n        <div>\r\n          {props.children}\r\n        </div>\r\n      </Grid>\r\n    // </Paper>\r\n  );\r\n}\r\n\r\n\r\nexport function Section(props){\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n      <Typography variant='h5'>\r\n        {props.title}\r\n      </Typography>\r\n      <Typography variant='body1' component='div'  className={classes.text}>\r\n        {props.text || props.children}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/FlightDemo.832681cc.gif\";","export default __webpack_public_path__ + \"static/media/SoccerTwosFPV.d96dead3.gif\";","import React from \"react\";\r\n\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nimport lunarLander from './FlightDemo.gif';\r\nimport soccerTwosFPV from './SoccerTwosFPV.gif';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxHeight: 500,\r\n    backgroundColor: '#2a2a2a'\r\n  },\r\n  content: {\r\n    marginTop: 30,\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n}));\r\n\r\nexport default function DemoCarousel(props) {\r\n  const classes = useStyles();\r\n\r\n  var height = props.height || window.innerHeight - 100;\r\n  height = Math.max(height, 100);\r\n\r\n  return (\r\n    <Paper  className={classes.root}  style={{height: height}}>\r\n      <Carousel id='carousel' className='h-100' onClick={props.onClick}>\r\n        <Carousel.Item>\r\n          <Grid \r\n            container \r\n            className={classes.content}\r\n            direction='column-reverse' \r\n            justify='flex-start'\r\n            alignItems='center'\r\n          >\r\n            <Grid item>\r\n              <Typography variant='h3' color='primary'>Lunar Lander</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img\r\n                id='lunarLander-img'\r\n                src={lunarLander}\r\n                alt=\"After 15,000 training episodes\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Grid \r\n            container \r\n            className={classes.content}\r\n            direction='column' \r\n            alignItems='center'\r\n          >\r\n            <Grid item>\r\n              <img\r\n                id='mlagents-img'\r\n                src={soccerTwosFPV}\r\n                alt=\"First-person view of the agents\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant='h3' color='primary'>Unity ML-Agents</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </Paper>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/SlidingLander.8f9db4d5.gif\";","import React from \"react\";\r\nimport { Link, Typography } from \"@material-ui/core\";\r\n\r\nimport {Entry} from './Projects';\r\nimport landingGif from './SlidingLander.gif';\r\n\r\n\r\nexport default function LunarLander() {\r\n  return (\r\n    <Entry  \r\n      id='lunarLander' \r\n      title='Lunar Lander' \r\n      image={landingGif}\r\n    >\r\n      <Body/>\r\n    </Entry>\r\n  );\r\n}\r\n\r\nfunction Body() {\r\n  return (\r\n    <div>\r\n      <Summary/>\r\n      <Description/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Summary() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Summary of Experience\r\n      </Typography>\r\n      <Typography variant='body1' component='div'>\r\n        <ul>\r\n          <li>Implemented a very competitive Deep Q-Network from scratch using only <Link href='http://files.davidqiu.com//research/nature14236.pdf' target='_blank' rel='noreferrer'>the published paper</Link> as reference.</li>\r\n          <li>Solved a control problem in a continuous state space with discrete actions (i.e., LunarLander-v2)</li>\r\n          <li>Gained practical PyTorch experience:\r\n            <ul>\r\n              <li>Wrote code to alternate between utilizing <code>cuda</code> or <code>cpu</code> based on available hardware and configuration files to achieve maximum performance on the given machine</li>\r\n              <li>Improved batch experience replay execution speed using Tensors and slicing/vectorization</li>\r\n              <li>Implemented both linear and recurrent neural networks (i.e., GRU and LSTM)</li>\r\n              <li>Formulated a Reinforcement Learning problem into a Supervised Learning problem to simplify training the model</li>\r\n              <li>Gained additional experience with the training and optimizer update loop</li>\r\n            </ul>\r\n          </li>\r\n          <li>Practiced automated hyperparameter search to quickly find best hyperparameters for training</li>\r\n          <li>Graphed and output metrics to enable quick and efficient discernment of training progress and success or failure of evaluation</li>\r\n          <li>Management of Python libraries through <code>conda</code> and <code>pip</code></li>\r\n        </ul>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Description() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Details\r\n      </Typography>\r\n      <Typography variant='body1'>\r\n        I solved the OpenAI gym LunarLander-v2 environment with an average reward of 200+ for 100 test episodes.\r\n        This is the stated goal of the environment according to the <Link href='https://gym.openai.com/envs/LunarLander-v2/' target='_blank' rel=\"noreferrer\">official environment documentation</Link>.\r\n        I was able to achieve this within 400 episodes of training, meaning it is viable to be on the official <Link href='https://github.com/openai/gym/wiki/Leaderboard#lunarlander-v2' target='_blank' rel=\"noreferrer\">leaderboard</Link>. \r\n        Hmm...maybe I <i>should</i> add it.\r\n        <br></br>\r\n        <br></br>\r\n        For this project, I built my own DQN agent from scratch, following the original DQN paper released by DeepMind. \r\n        I made it very performant using PyTorch for both experience storage and the agent's neural network. I found PyTorch to be more performant than the Keras library I had initially attempted to use.\r\n        With PyTorch, I was able to see a 50% or so increase in training speed as it took advantage of my multi-core CPU and my NVIDIA GPU.\r\n        <br></br>\r\n        <br></br>\r\n        To find a good configuration, I hand-crafted my own hyperparameter search methods.  \r\n        I even automated training so that I could let my computer run for a day, searching for the best combination of several distinct hyperparameters and network architectures.\r\n        Along with the search, I implemented several graphs to help me track the change in loss (during training) and reward by episode as well as rolling reward means and standard deviations. \r\n        <br></br>\r\n        <br></br>\r\n        All in all, I felt like I learned a lot about how to (and how not to) build a Deep RL agent and its surrounding training code.\r\n        Training and evaluation metrics as well as additional details and instructions on how to run it yourself can be found at the project repository: <Link href='https://github.com/logar16/LunarLander' target='_blank' rel=\"noreferrer\">https://github.com/logar16/LunarLander</Link>.\r\n        <br></br>\r\n        Feel free to take it for a spin! 😉\r\n      </Typography>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Link, Typography } from \"@material-ui/core\";\r\n\r\nimport {Entry} from './Projects';\r\nimport mlagentsImage from './ML-Agents-Banner.png';\r\n\r\n\r\nexport default function UnityMlAgents() {\r\n  return (\r\n    <Entry  \r\n      id='mlagents' \r\n      title=\"Unity's ML-Agents\" \r\n      image={mlagentsImage}\r\n    >\r\n      <div>\r\n        <Summary/>\r\n        <Details/>\r\n        <FutureWork/>\r\n      </div>\r\n    </Entry>\r\n  );\r\n}\r\n\r\nfunction Summary() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Summary\r\n      </Typography>\r\n      <Typography variant='body1' component='div'>\r\n        <ul>\r\n          <li>Experience with Unity's ML-Agents toolkit and API</li>\r\n          <li>Created and modified C# scripts to enhance learning and evaluation of performance\r\n            <ul>\r\n              <li>For instance, added reward shaping to reduce the number of steps to convergence</li>\r\n            </ul>\r\n          </li>\r\n          <li>Familiarized with the ML-Agents documentation and its nuances\r\n            <ul>\r\n              <li>Improved team's use of the API and CLI to best use parallelization and reduced training time by <b>75%</b></li>\r\n            </ul>\r\n          </li>\r\n          <li>Used Unity as an editor to build Prefabs, Scenes, and RL environments</li>\r\n          <li>Learned how to use the ML-Agents toolkit to allow for easy environment creation and agent training</li>\r\n        </ul>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Details() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Details\r\n      </Typography>\r\n      <Typography variant='body1'>\r\n        For my <Link href=\"https://github.gatech.edu/ljones91/cs7643-project\" target=\"_blank\" rel='noreferrer'>final project</Link> in my Deep Learning course at Georgia Tech, I worked with a team to build intelligent agents that could coordinate teams to play soccer (or \"football\" if you want to get picky about it).\r\n        We tested how adding recurrent neural networks to agent models impacted the collaborative agents, especially when they had limited observations.\r\n        I grew in my confidence using Unity, their ML-Agents API and CLI, and PyTorch RNN modules.\r\n        I've always been a fan of RL, so it was invigorating to learn that Unity is also part of the fan club.\r\n        Their API is more robust than the basic OpenAI Gym API and their support for multiple agents and teams etc. got me really excited. \r\n        I am convinced that we need to see more multi-agent RL research, since most interactions in the real world involve multiple, independent agents.\r\n        Not only was I able to gain some great experience in Unity and with RL for my class, but I also was given inspiration on some personal projects I want to pursue.\r\n        <br></br>\r\n        <br></br>\r\n        For the final project I manned creating/modifying Unity assets such as the prefabs, scenes, and scripts.\r\n        I also took charge of evaluating and comparing different models over 1,000 games for each match-up.  \r\n        I also carved the way for the team by experimenting both with the CLI (letting ML-Agents code do training) and by interfacing with the API directly.  \r\n        We chose to stick with the former, but now I know how to do it either way, so I can quickly train either simple or complex (custom) models as needed. \r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FutureWork() {\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <Typography variant='h4'>\r\n        Future Directions\r\n      </Typography>\r\n      <Typography>\r\n        Now that I've got a handle on how to use ML-Agents, I want to do some personal research and projects.\r\n        <br></br>\r\n        <br></br>\r\n        First is creating an environment similar to (but more complicated than) the Food Collection environment.\r\n        The repository can be found here: <Link href='https://github.com/logar16/ScavengerWorldUnity' target='_blank' rel=\"noreferrer\">https://github.com/logar16/ScavengerWorldUnity</Link>.\r\n        I envision it having several teams of simple units that must work cooperatively to explore and exploit the environment.\r\n        I am inspired by biology and the emergence of complex behaviors in colonial animals (e.g., ants and bees) due to very simple rules which synergistically combine.\r\n        I hope to elicit similar organic emergence using deep learning and an environment which encourages cooperation <i>and</i> competition instead of only one or the other.\r\n        I will provide methods for communication, such as leaving distinct markers, to see if the agents come up with any new and interesting communication protocols.\r\n        It is still in the early stages, but I will be working on it as I have time.\r\n        <br></br>\r\n        <br></br>\r\n        Secondly, I am quite intrigued by the game <i>1313 Dead End Drive</i> which involves much scheming and tough choices of when to move one's own characters or another's.\r\n        I want to build a simplified simulator of the game which will follow the ML-Agent's API so that I can find an optimal solution to this fun but difficult game.\r\n        Since the game requires predicting or simulating other agent's model of the world and possible decision-making process, it is of similar difficulty to the challenging game of Hanabi which was highlighted by <Link href='https://arxiv.org/abs/1902.00506' target='_blank' rel='noreferrer'>researchers at DeepMind</Link> as an important problem to solve.\r\n        I think this (my proposed environment) would also serve as a useful testing environment for RL algorithms but in a competitive environment.\r\n      </Typography>  \r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/WIP.c39880ea.png\";","import React from \"react\";\r\nimport { Link, Typography } from \"@material-ui/core\";\r\n\r\nimport {Entry} from './Projects';\r\nimport wipImage from './WIP.png';\r\n\r\n\r\nexport default function FutureProjs() {\r\n  return (\r\n    <Entry  \r\n      id='reader' \r\n      title='Future Projects' \r\n      image={wipImage}\r\n    >\r\n      <Body/>\r\n    </Entry>\r\n  );\r\n}\r\n\r\nfunction Body() {\r\n  return (\r\n    <div>\r\n      <MultimediaReader/>\r\n      <br></br>\r\n      <Megalopolis/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Megalopolis() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Megalopolis (Game)\r\n      </Typography>\r\n      <Typography variant='body1' component='div'>\r\n        I've got a resource-gathering strategy board/video game idea that I want to build in Unity.  Working title is <i>Megalopolis</i> for now.\r\n        To help justify my work on it, I will make sure it has a very solid RL or AI interface so that it can be used as an advanced RL test environment.\r\n        This would fit in the middle ground between a toy RL problem and StarCraft II.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MultimediaReader() {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        Multimedia Reader/Writer\r\n      </Typography>\r\n      <Typography variant='body1'>\r\n        My multidisciplinary <Link href='#/experience/suu?switch=true'>Honors Thesis at SUU</Link> included drawings and music to go along with the written word.\r\n        Honestly, I wanted it to be as close to a movie as possible, but I didn't want to mess with trying to do a film.  \r\n        However, I have since realized that there is a definite space for stories that incorporate more than just text and occasional pictures, and I want to share my such stories with others.\r\n        Thus, I want to create a personal website which allows people to read my stories with all of the extra media included, such as songs that start playing when the text reaches a certain point and loop until another point, and so on.\r\n        <br></br>\r\n        <br></br>\r\n        The goal is to both make a website for reading, but also one for authoring such stories.  I would open it up so anyone can share their multi-media stories on the site.  I plan to use React and cloud services to serve the stories to readers.\r\n        I've done little more than plan it out and create the repositories, but when time permits (and when I can't wait to be a famous fiction writer any longer), I hope to dive into this project.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { Divider, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Carousel from './DemoCarousel';\r\nimport LunarLander from './LunarLanderProj'\r\nimport UnityMlAgents from './UnityMLAgentsProj'\r\nimport Bottom from \"../../common/Bottom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport FutureProjs from \"./FutureProj\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  item: {\r\n    width: '100%',\r\n    padding: '0 30px',\r\n    marginTop: 50\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    minHeight: 100,\r\n    backgroundColor: '#2a2a2a'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    padding: 8\r\n  },\r\n  description: {\r\n    padding: 10,\r\n    height: '100%'\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Projects() {\r\n  var query = new URLSearchParams(useLocation().search);\r\n  query = query.get('to');\r\n\r\n  useEffect(() => {\r\n    var element = document.getElementById(query);\r\n    if (element) {\r\n        window.scroll(0, element.offsetTop - 50);\r\n    }\r\n    else {\r\n      window.scrollTo({top: 0});\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Carousel onClick={handleClick}></Carousel>\r\n      </div>\r\n      \r\n      <div id='start' style={{height: 10}}/>\r\n\r\n      <ProjectList>\r\n        <LunarLander/>\r\n        <UnityMlAgents/>\r\n        <FutureProjs/>\r\n      </ProjectList>\r\n\r\n      <div>\r\n        <Bottom/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst handleClick = (event) => {\r\n  let id = event.target.id || '';\r\n  if (!id) return;\r\n  id = id.replace('-img', '');\r\n  let element = document.getElementById(id);\r\n  if (!element) return;\r\n  window.scroll(0, element.offsetTop - 50);\r\n}\r\n\r\n\r\nfunction ProjectList({children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid \r\n      container\r\n      className={classes.list}\r\n      direction='column'\r\n      alignItems='center'\r\n    >\r\n      {\r\n        children.map((item, i) => {\r\n          return (\r\n            <Grid item  className={classes.item}  key={i}>\r\n              {item}\r\n            </Grid>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport function Entry({id, title, image, children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper  id={id} className={classes.paper}>\r\n      <Grid \r\n        container \r\n        className={classes.list}\r\n        direction='column'\r\n      >\r\n        <Title  text={title}/>\r\n        <Body image={image}>\r\n          {children}\r\n        </Body>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\nfunction Title({text}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid id='title' item  className={classes.description}>\r\n      <Typography variant='h2'>\r\n        {text}\r\n      </Typography>\r\n      <Divider/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction Body({image, children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify='space-around'>\r\n      <Grid item  xs={4}>\r\n        <img className={classes.image} src={image} alt=''/>\r\n      </Grid>\r\n      <Grid item  xs={8}>\r\n        <Grid \r\n          container  \r\n          className={classes.description}\r\n          direction='column'\r\n          justify='center'\r\n        >\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/Family.101287c4.jpg\";","export default __webpack_public_path__ + \"static/media/Hobbies.fec96efd.png\";","export default __webpack_public_path__ + \"static/media/Nebula.55865c32.jpg\";","export default __webpack_public_path__ + \"static/media/Pathway.a24de073.jpg\";","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider, Grid, Hidden, Link, makeStyles, Paper } from \"@material-ui/core\";\r\n\r\nimport Bottom from \"../../common/Bottom\";\r\nimport StartImage from \"../../common/StartImage\";\r\n\r\nimport profileImage from '../home/profile.jpg';\r\nimport familyImage from './Family.jpg';\r\nimport hobbyImage from './Hobbies.png';\r\nimport interestsImage from './Nebula.jpg';\r\nimport pathImage from './Pathway.jpg';\r\n\r\nimport './About.css';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  divider: {\r\n    margin: 30,\r\n  },\r\n  list: {\r\n    width: '95%',\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: '98%',\r\n    margin: 'auto',\r\n    minHeight: 100,\r\n    backgroundColor: '#2a2a2a'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    padding: 8\r\n  },\r\n  description: {\r\n    padding: 10,\r\n    height: '100%',\r\n    textAlign: 'left'\r\n  },\r\n});\r\n\r\n\r\nexport default function About() {\r\n  const classes = useStyles();\r\n\r\n  window.scrollTo({top: 0});\r\n\r\n  const clickHandler = () => {\r\n    let element = document.getElementById('start');\r\n    window.scroll(0, element.offsetTop - 50);\r\n  }\r\n\r\n  return (\r\n    <div  className={classes.root}>\r\n      <div>\r\n        <StartImage \r\n          onClick={clickHandler} \r\n          bgImage={profileImage}  \r\n          strength={400}\r\n          height={700}\r\n          left={<Intro/>}\r\n        />\r\n      </div>\r\n\r\n      <Divider id='start' variant='middle' className={classes.divider} />\r\n\r\n      <div>\r\n        <Typography variant='h5'>\r\n          Interested in learning more about me as a human being?  Read on!\r\n        </Typography>\r\n      </div>\r\n      \r\n      <Divider variant='middle' className={classes.divider} />\r\n\r\n      <AboutList>\r\n        <Entry  title='My Family'    image={familyImage}>\r\n          <FamilyDescription/>\r\n        </Entry>\r\n        <Entry  title='My Hobbies'   image={hobbyImage}>\r\n          <HobbiesDescription/>\r\n        </Entry>\r\n        <Entry  title='My Interests' image={interestsImage}>\r\n          <InterestsDescription/>\r\n        </Entry>\r\n        <Entry  title='My Story'  image={pathImage}>\r\n          <StoryDescription/>\r\n        </Entry>\r\n      </AboutList>\r\n\r\n      <div>\r\n        <Bottom top='start'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Intro() {\r\n  return (\r\n    <Grid container justify='center' alignItems='center' style={{height: '100%'}}>\r\n      <Hidden smDown>\r\n        <p className='intro med-text'>\r\n          Me again! \r\n          <br></br>\r\n          But this time, it's personal!\r\n        </p>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nfunction AboutList({children}) {\r\n  const classes = useStyles();\r\n\r\n  if (!Array.isArray(children))\r\n    children = [children];\r\n\r\n  return (\r\n    <Grid \r\n      container \r\n      direction='column' \r\n      justify='space-around'\r\n      alignItems='center'\r\n      className={classes.list}\r\n      spacing={3}\r\n    >\r\n      {\r\n        children.map((item, i) => {\r\n          return (\r\n            <Grid item  key={i} style={{width: '100%'}}>\r\n              {item}\r\n            </Grid>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function Entry({title, image, children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid \r\n        container \r\n        className={classes.list}\r\n        direction='column'\r\n      >\r\n        <Title  text={title}/>\r\n        <Body image={image}>\r\n          {children}\r\n        </Body>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\nfunction Title({text}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid id='title' item  className={classes.description}>\r\n      <Typography variant='h2'>\r\n        {text}\r\n      </Typography>\r\n      <Divider/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction Body({image, children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify='space-around'>\r\n      <Grid item  xs={4}>\r\n        <img className={classes.image} src={image} alt=''/>\r\n      </Grid>\r\n      <Grid item  xs={8}>\r\n        <Grid \r\n          container  \r\n          className={classes.description}\r\n          direction='column'\r\n          justify='center'\r\n        >\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction StoryDescription() {\r\n  return (\r\n    <Typography>\r\n      My path to where I am now was a bit circuitous.  \r\n      I studied Biology and Chemistry for my undergrad, and I enjoyed learning about the sciences, but I had absolutely no idea what job I wanted in the field, since I detested the lab work for my classes—the day to day a scientist would expect to do.\r\n      I had not considered a degree in CS because I had the incorrect assumption that only people who hated sunlight and friends and grew up on the command line would enjoy studying CS.\r\n      I liked computers, but I didn't understand them at the lowest level, and I wasn't certain if I could.\r\n      <br></br>\r\n      <br></br>\r\n      One summer, between semesters, I decided to look up a free online CS course (hosted by MIT) on an inspired whim.\r\n      It introduced me to Python and the amazing world of computer programming.  I immediately fell in love! \r\n      My first program was a Magic 8-ball that would randomly pick responses to entered text.  My next project was a text-based game similar to rock paper scissors.  My applications only increased in size and complexity from there.\r\n      I was captivated by the power of programming.  I could use logic to force the computer to do what I want.  And once I could express how to do it once, I just needed to put it in a loop and I could do it 10, 100, or 1,000,000 times with the modification of a single variable.\r\n      New worlds opened up to me!\r\n      <br></br>\r\n      <br></br>\r\n      However, I was almost done with my Biology degree, and switching to CS would put me back several years.  I shelved programming to finish my studies.\r\n      But I decided to take an elective CS class, and the draw of programming pulled me in again.  \r\n      I excelled, completing projects far outstripping my classmates who only were in the class because they enjoyed playing video games etc..\r\n      I was passionate, I loved programming and the power it gave me to create things and effect change effortlessly.\r\n      I built some games on my own, one copying the board game Dominion and one copying the old arcade game Asteroids.  \r\n      Talking to a friend about these and my love of programming helped me connect with the right people and land an internship and my first engineering job at <Link href='#/experience/cgm?switch=true'>Casino Game Maker</Link>.\r\n      <br></br>\r\n      <br></br>\r\n      From there I gained the skills and confidence to apply to the <Link href='#/experience/gatech?switch=true'>Georgia Tech OMSCS Master's program</Link>.  I wanted the degree to show others that I know what I'm doing, and to make sure that I did actually know for myself.\r\n      I often struggle with imposter syndrome since I didn't get a CS undergrad and I haven't built a compiler etc. etc..  \r\n      However, I am a quick learner and I love solving problems, two skills that I think are at the heart of being successful in any CS-related endeavor.\r\n      <br></br>\r\n      <br></br>\r\n      I want to keep learning, and I want to make a difference in the world.  It is so easy to make money in this field, especially if you don't care to help raise the human race.\r\n      I don't need more money, I just want to make a positive difference.  I think I can, and I know I will.  I just need to connect with the right people.  Hopefully the faithful reader will be able to help me in this regard.\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction FamilyDescription() {\r\n  return (\r\n    <Typography>\r\n      I am happily married to a wonderful wife, and we have two young children.  We just got a bigger car, so that's a soft commit on having a third child! 😉\r\n      <br></br>\r\n      <br></br>\r\n      My wife is a real estate agent; perhaps the most organized person I know; and one of the sweetest and kindest people on the earth.  \r\n      Where I am loud and boisterous, she is quiet, calm, and thoughtful. \r\n      Our first activity together was playing racquetball on January 26th, 2015, and she married me less than 6 months later!\r\n      <br></br>\r\n      <br></br>\r\n      My son is a prodigy! He could identify all letters (A-Z) and numbers (0-9) by 18 months! \r\n      And now, to stay busy, he likes to memorize books (see <i>Giraffes Can't Dance</i> or <i>Room on the Broom</i> as examples of the types of books he has memorized).\r\n      <br></br>\r\n      <br></br>\r\n      My daughter is a newborn, so we will see what she becomes.  So far, she loves smiling, so that's a good start!\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction HobbiesDescription() {\r\n  return (\r\n    <Typography component='div'>\r\n      When I get a spare moment, you'll find me doing one of the following:\r\n      <ul>\r\n        <li>Coding Personal Projects (check out the <Link href='#/projects'>Projects</Link> page for details)</li>\r\n        <li>Reading and Writing Fiction\r\n          <ul>\r\n            <li>Favorite Books and Series\r\n              <ul>\r\n                <li>Mistborn: The Final Empire</li>\r\n                <li>Stormlight Archive</li>\r\n                <li>Abhorsen Trilogy</li>\r\n                <li>Bartimaeus Sequence</li>\r\n                <li>Dandelion Wine</li>\r\n                <li>The Children of Húrin</li>\r\n              </ul>\r\n            </li>\r\n            <li>I also like to write!  I've got a trove of ideas for Fantasy and Sci-Fi books that I do world-building and scenes for, but few that I've really put together into a complete project.\r\n            One of my personal projects is to create a website that distributes my books for me, but gives a more interactive experience than the typical e-reader would provide.\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>Sports\r\n          <ul>\r\n            <li>Racquetball</li>\r\n            <li>Pickleball</li>\r\n            <li>Spikeball</li>\r\n            <li>Soccer</li>\r\n          </ul>\r\n          Note that I like sports but I hate \"working out\".  I can run for miles chasing a ball, but only a few city blocks if I'm <i>just</i> running.\r\n        </li>\r\n        <li>Board Games\r\n          <ul>\r\n            <li>Dominion (I've got five expansions for it)</li>\r\n            <li>Splendor</li>\r\n            <li>Citadels</li>\r\n            <li>Villainous</li>\r\n            <li>And many many more!</li>\r\n          </ul>\r\n          My wife and I like to invite people over to play board games as a way to make new friends.  I'm open to doing so remotely if you're interested!\r\n        </li>\r\n        <li>Video Games\r\n          <ul>\r\n            <li>Age of Empires and Age of Mythology (RTS)</li>\r\n            <li>Roller Coaster Tycoon (Simulation)</li>\r\n            <li>Halo and <i>Original</i> Star Wars Battlefront (FPS)</li>\r\n            <li>Geometry Wars (Multi-directional shooter)</li>\r\n            <li>Portals (Puzzle)</li>\r\n          </ul>\r\n          I don't really get to play video games anymore due to my other obligations, but I long for an excuse to play again.\r\n          Perhaps playing games is why I'm so interested in Reinforcement Learning...\r\n        </li>\r\n      </ul>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction InterestsDescription() {\r\n  return (\r\n    <Typography component='div'>\r\n      I always like to say, \"If I had several more lives, I would dedicate them to studying the following topics:\"\r\n      <ul>\r\n        <li>Astronomy, Cosmology, and Physics</li>\r\n        <li>Religion\r\n          <ul>\r\n            <li>I'm a faithful member of <Link  href='https://www.comeuntochrist.org'>The Church of Jesus Christ of Latter-day Saints</Link>, and I enjoy studying the Restored Gospel almost daily</li>\r\n          </ul>\r\n        </li>\r\n        <li>Psychology and Neurology\r\n          <ul>\r\n            <li>Another reason I enjoy AI so much, as it is informed by and sheds additional light on human psychology</li>\r\n          </ul>\r\n        </li>\r\n        <li>Music\r\n          <ul>\r\n            <li>I enjoy music theory and the mathematical logic behind what sounds good.</li>\r\n            <li>I play guitar, trumpet, and a little piano, but it's been a while 😬</li>\r\n          </ul>\r\n        </li>\r\n        <li>Mechanical and Electrical Engineering</li>\r\n        <li>Drawing and 3D Modeling\r\n          <ul>\r\n            <li>I want to make an AI application that will help me make 3D models like I imagine them, because that will probably be faster than learning how to do it by hand...</li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      I am interested and excited about these topics and would love any excuse to combine them with Machine Learning or coding in general so I can satisfy two passions at one time!\r\n    </Typography>\r\n  );\r\n}","import React, {useState} from \"react\";\r\nimport './App.css';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Home from './pages/home/Home';\r\nimport Experience from './pages/experience/Experience';\r\nimport Projects from './pages/projects/Projects';\r\nimport About from './pages/about/About';\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n\r\n      <Switch id='route-switch'>\r\n        <Route path={[\"/experience/:id\", \"/experience\"]}>\r\n          <Experience />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst locations = [\r\n  '/',\r\n  'experience',\r\n  'projects',\r\n  'about',\r\n]\r\n\r\nfunction NavBar() {\r\n  let path = useLocation().pathname.split('/')[1];\r\n  let index = Math.max(0, locations.indexOf(path));\r\n  const [value, setValue] = useState(index);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    window.scrollTo({top: 0});\r\n  }\r\n  // console.log(`path: ${path}, index: ${index}, value: ${value}`);\r\n\r\n  if (index !== value) {\r\n    setValue(index)\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Tabs value={value} onChange={handleChange}>\r\n        <LinkTab  label='Home' link={''} />\r\n        <LinkTab  label='Experience'  link={'/experience'} />\r\n        <LinkTab  label='Projects'    link={'/projects'} />\r\n        <LinkTab  label='About'       link={'/about'} />\r\n      </Tabs>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nfunction LinkTab({label, link}) {\r\n  const tabStyle = { fontSize: 24 };\r\n  const linkStyle = {\r\n    color: \"white\"\r\n  };\r\n\r\n  return (\r\n    <Tab  \r\n      label={label}\r\n      to={link} \r\n      style={tabStyle} \r\n      component={NavLink} \r\n      activeStyle={linkStyle}  \r\n      isActive={() => true}\r\n    />\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {blue, teal} from '@material-ui/core/colors';\r\n\r\nconst primary = blue;\r\nconst secondary = teal;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: primary,\r\n    secondary: secondary,\r\n    background: {\r\n      default: '#212121'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: ['Alegreya', 'Lora', 'Verdana', '\"Consolas\"', 'Courier New'].join(','),\r\n    body1: {\r\n      fontFamily: ['Lora', 'Alegreya', 'Verdana',].join(','),\r\n    }\r\n  },\r\n  props: {\r\n    MuiLink: {\r\n      color: 'secondary',\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiLink: {\r\n      underlineHover: {\r\n        '&:hover': {\r\n          color: primary[500],\r\n        },\r\n      }\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontFamily: 'Consolas'\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Router>\r\n      <ThemeProvider  theme={theme}>\r\n        <CssBaseline/>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}